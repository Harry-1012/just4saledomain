<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>comfyui通过Api请求报错,通过comfyui界面执行正常</title>
      <link href="/blog/p/2025comfyujinterfaceerror/"/>
      <url>/blog/p/2025comfyujinterfaceerror/</url>
      
        <content type="html"><![CDATA[<p>通过接口Api执行工作流报错如下,</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">got prompt</span><br><span class="line">[Impact Pack] ComfyUI-Impact-Pack: Error on prompt - several features will not work.</span><br><span class="line">&#x27;list&#x27; object has no attribute &#x27;items&#x27;</span><br><span class="line">[DEBUG] Inputs type: &lt;class &#x27;list&#x27;&gt;</span><br><span class="line">Exception in thread Thread-7 (prompt_worker):</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;/root/miniconda3/lib/python3.10/threading.py&quot;, line 1016, in _bootstrap_inner</span><br><span class="line">    self.run()</span><br><span class="line">  File &quot;/root/miniconda3/lib/python3.10/threading.py&quot;, line 953, in run</span><br><span class="line">    self._target(*self._args, **self._kwargs)</span><br><span class="line">  File &quot;/root/ComfyUI/main.py&quot;, line 176, in prompt_worker</span><br><span class="line">    e.execute(item[2], prompt_id, item[3], item[4])</span><br><span class="line">  File &quot;/root/ComfyUI/execution.py&quot;, line 479, in execute</span><br><span class="line">    cache.set_prompt(dynamic_prompt, prompt.keys(), is_changed_cache)</span><br><span class="line">  File &quot;/root/ComfyUI/comfy_execution/caching.py&quot;, line 157, in set_prompt</span><br><span class="line">    self.cache_key_set = self.key_class(dynprompt, node_ids, is_changed_cache)</span><br><span class="line">  File &quot;/root/ComfyUI/comfy_execution/caching.py&quot;, line 80, in __init__</span><br><span class="line">    self.add_keys(node_ids)</span><br><span class="line">  File &quot;/root/ComfyUI/comfy_execution/caching.py&quot;, line 92, in add_keys</span><br><span class="line">    self.keys[node_id] = self.get_node_signature(self.dynprompt, node_id)</span><br><span class="line">  File &quot;/root/ComfyUI/comfy_execution/caching.py&quot;, line 97, in get_node_signature</span><br><span class="line">    ancestors, order_mapping = self.get_ordered_ancestry(dynprompt, node_id)</span><br><span class="line">  File &quot;/root/ComfyUI/comfy_execution/caching.py&quot;, line 128, in get_ordered_ancestry</span><br><span class="line">    self.get_ordered_ancestry_internal(dynprompt, node_id, ancestors, order_mapping)</span><br><span class="line">  File &quot;/root/ComfyUI/comfy_execution/caching.py&quot;, line 144, in get_ordered_ancestry_internal</span><br><span class="line">    self.get_ordered_ancestry_internal(dynprompt, ancestor_id, ancestors, order_mapping)</span><br><span class="line">  File &quot;/root/ComfyUI/comfy_execution/caching.py&quot;, line 144, in get_ordered_ancestry_internal</span><br><span class="line">    self.get_ordered_ancestry_internal(dynprompt, ancestor_id, ancestors, order_mapping)</span><br><span class="line">  File &quot;/root/ComfyUI/comfy_execution/caching.py&quot;, line 137, in get_ordered_ancestry_internal</span><br><span class="line">    input_keys = sorted(inputs.keys())</span><br><span class="line">AttributeError: &#x27;list&#x27; object has no attribute &#x27;keys&#x27;</span><br><span class="line">Cannot connect to comfyregistry.</span><br></pre></td></tr></table></figure><p>但通过comfyui界面执行是正常的,这是因为自动隐式兼容处理了,工作流设计不规范,导致某些节点列表和字典返回值混淆,导出.json时,数据是严格按照JSON结构来的,没有GUI的自动纠正机制,所以会报错.</p><p>最后排查到 报错的节点如下</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">&quot;25&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;inputs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;class_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PulidEvaClipLoader&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_meta&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PuLIDEVAClip加载器&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p>  由于25号节点 inputs为空,默认返回了空list,而非字典类型dict,但是PulidEvaClipLoader插件要求输入为字典类型</p><p>  实际操作改为如下,增加默认值即可<br>  <figure class="highlight json"><table><tr><td class="code"><pre><span class="line">  <span class="attr">&quot;25&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;inputs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// 添加任意有效字段占位（例如模型路径）</span></span><br><span class="line">    <span class="attr">&quot;dummy_param&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span>  </span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;class_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PulidEvaClipLoader&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_meta&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PuLIDEVAClip加载器&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> comfyui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修改视频元信息时长 duration修改</title>
      <link href="/blog/p/2025videoduration/"/>
      <url>/blog/p/2025videoduration/</url>
      
        <content type="html"><![CDATA[<p>下载 010Editor免费版 <a href="https://sweetscape.com/010editor/">https://sweetscape.com/010editor/</a><br><img src="https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2025/010Ed150Hex.png" alt="alt text"></p><p>打开 010Editor , 按下Ctrl+O 打开要修改的视频</p><p>找到duration标签 更改时长 然后保存<br><img src="https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2025/edit_duration.png" alt="alt text"></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 视频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>comfyui gemeni apikey 配置</title>
      <link href="/blog/p/2025comfyuigemeniapikey/"/>
      <url>/blog/p/2025comfyuigemeniapikey/</url>
      
        <content type="html"><![CDATA[<p>&#x2F;root&#x2F;ComfyUI&#x2F;custom_nodes&#x2F;ComfyUI_LayerStyle_Advance&#x2F;api_key.ini</p><p><a href="https://console.cloud.google.com/apis/library/generativelanguage.googleapis.com?project=aqueous-impact-386909&inv=1&invt=AbtkIg">https://console.cloud.google.com/apis/library/generativelanguage.googleapis.com?project=aqueous-impact-386909&amp;inv=1&amp;invt=AbtkIg</a></p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line">google api <span class="attr">key</span>=xxxxxxxxxxxxxx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComfyUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ffmpeg 中文乱码 windows</title>
      <link href="/blog/p/ffmpegzhognwenluanmawinds/"/>
      <url>/blog/p/ffmpegzhognwenluanmawinds/</url>
      
        <content type="html"><![CDATA[<p>ffmpeg 中文乱码<br>先去Windows字体库 C:\Windows\Fonts , 复制微软雅黑msyhl.ttc,到ffmpeg运行目录 </p><p>ffmpeg里字库文件改成这样:fontfile&#x3D;’msyhl.ttc’</p><p>再重新执行就可以了</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字体 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>canvas绘制文字彩虹弯曲弧形效果 Vue.js</title>
      <link href="/blog/p/canvascaihonghuizhitext/"/>
      <url>/blog/p/canvascaihonghuizhitext/</url>
      
        <content type="html"><![CDATA[<p>demo image</p><p><img src="https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2024/canvascaihonghuizhitext.png" alt="demo image"></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">ref</span>=<span class="string">&quot;canvas&quot;</span> <span class="attr">:width</span>=<span class="string">&quot;canvasWidth&quot;</span> <span class="attr">:height</span>=<span class="string">&quot;canvasHeight&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">props</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">text</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">default</span>: <span class="string">&#x27;阿斯顿发斯蒂芬&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="title class_">String</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">required</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">radius</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="title class_">Number</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">default</span>: <span class="number">200</span> <span class="comment">// 控制文字弯曲的半径</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">canvasWidth</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="title class_">Number</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">default</span>: <span class="number">500</span> <span class="comment">// Canvas 宽度</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">canvasHeight</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="title class_">Number</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">default</span>: <span class="number">600</span> <span class="comment">// Canvas 高度</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">fontSize</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="title class_">Number</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">default</span>: <span class="number">32</span> <span class="comment">// 字体大小</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">curvature</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="title class_">Number</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">default</span>: <span class="number">0.5</span> <span class="comment">// 弯曲度，可以通过调整来改变弧度</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">letterSpacing</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="title class_">Number</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">default</span>: <span class="number">0</span> <span class="comment">// 字距</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">startAngle</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="title class_">Number</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">default</span>: <span class="number">0</span> <span class="comment">// 起始角度</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">ellipseFactor</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="title class_">Number</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">default</span>: <span class="number">1</span> <span class="comment">// 椭圆因子，1表示圆形，&lt;1表示垂直压缩，&gt;1表示水平拉伸</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="title function_">drawCurvedText</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">drawCurvedText</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> canvas = <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">canvas</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> ctx = canvas.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 设置字体</span></span></span><br><span class="line"><span class="language-javascript">      ctx.<span class="property">font</span> = <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.fontSize&#125;</span>px Arial`</span>;</span></span><br><span class="line"><span class="language-javascript">      ctx.<span class="property">textBaseline</span> = <span class="string">&#x27;middle&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> text = <span class="variable language_">this</span>.<span class="property">text</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> radius = <span class="variable language_">this</span>.<span class="property">radius</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> canvasWidth = <span class="variable language_">this</span>.<span class="property">canvasWidth</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> canvasHeight = <span class="variable language_">this</span>.<span class="property">canvasHeight</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> textLength = text.<span class="property">length</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> letterSpacing = <span class="variable language_">this</span>.<span class="property">letterSpacing</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> startAngle = <span class="variable language_">this</span>.<span class="property">startAngle</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> ellipseFactor = <span class="variable language_">this</span>.<span class="property">ellipseFactor</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 中心点</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> centerX = canvasWidth / <span class="number">2</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> centerY = canvasHeight / <span class="number">2</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 弧度范围：从 -curvature 到 curvature</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> angleRange = <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="variable language_">this</span>.<span class="property">curvature</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 每个字符的角度差，考虑字距</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> totalSpacing = letterSpacing * (textLength - <span class="number">1</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> angleStep = (angleRange - totalSpacing / radius) / (textLength - <span class="number">1</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 计算起始角度，使得中间的字是正竖着的</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> halfTextLength = <span class="title class_">Math</span>.<span class="title function_">floor</span>(textLength / <span class="number">2</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; textLength; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> char = text[i];</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 当前字符的角度，相对于中间字符的对称分布</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> angle = startAngle + (i - halfTextLength) * (angleStep + letterSpacing / radius);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> x = centerX + radius * <span class="title class_">Math</span>.<span class="title function_">sin</span>(angle) * ellipseFactor;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> y = centerY - radius * <span class="title class_">Math</span>.<span class="title function_">cos</span>(angle);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 保存当前绘图状态</span></span></span><br><span class="line"><span class="language-javascript">        ctx.<span class="title function_">save</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 移动画布到字符位置并旋转</span></span></span><br><span class="line"><span class="language-javascript">        ctx.<span class="title function_">translate</span>(x, y);</span></span><br><span class="line"><span class="language-javascript">        ctx.<span class="title function_">rotate</span>(angle); <span class="comment">// 直接使用当前字符的角度旋转</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 如果是中间的字符，保持正竖着</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (i === halfTextLength) &#123;</span></span><br><span class="line"><span class="language-javascript">          ctx.<span class="title function_">rotate</span>(-angle); <span class="comment">// 中间字符保持正竖着</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 绘制字符</span></span></span><br><span class="line"><span class="language-javascript">        ctx.<span class="title function_">fillText</span>(char, <span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 恢复之前保存的绘图状态</span></span></span><br><span class="line"><span class="language-javascript">        ctx.<span class="title function_">restore</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">watch</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">text</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="title function_">drawCurvedText</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">radius</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="title function_">drawCurvedText</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">canvasWidth</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="title function_">drawCurvedText</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">canvasHeight</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="title function_">drawCurvedText</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">fontSize</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="title function_">drawCurvedText</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">curvature</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="title function_">drawCurvedText</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">letterSpacing</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="title function_">drawCurvedText</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">startAngle</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="title function_">drawCurvedText</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">ellipseFactor</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="title function_">drawCurvedText</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">canvas</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> canvas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序加载字体安卓真机失效问题</title>
      <link href="/blog/p/2024weixinminifontload/"/>
      <url>/blog/p/2024weixinminifontload/</url>
      
        <content type="html"><![CDATA[<p>使用wx.loadFontFace方式加载字体,在开发工具和苹果真机字体可以正常加载,但是在安卓真机却总是出发fail回调,而且没有原因只返回{“status”: “error”}</p><p>最终发现解决方案如下:</p><p>微信小程序的请求域名是这个 servicewechat.com , 需要增加cors支持<br>或者去Nginx配置中增加字体文件的跨域支持</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//nginx </span><br><span class="line">location ~* \.(eot|ttf|woff|woff2|svg)$ &#123;</span><br><span class="line">    add_header Access-Control-Allow-Origin *;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字体 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP直接输出二进制图片 显示图片 ThinkPHP直接输出二进制图片显示</title>
      <link href="/blog/p/2024phpshuchutupian/"/>
      <url>/blog/p/2024phpshuchutupian/</url>
      
        <content type="html"><![CDATA[<p>关键是从 ob_end_clean(); 开始的这一段代码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 读取背景图片和目标图片</span></span><br><span class="line"><span class="variable">$backgroundPath</span> = <span class="string">&#x27;背景图路径&#x27;</span>;</span><br><span class="line"><span class="variable">$overlayPath</span> = <span class="string">&#x27;要覆盖的路径&#x27;</span>;</span><br><span class="line"><span class="comment">// 获取背景图片和目标图片的资源</span></span><br><span class="line"><span class="variable">$background</span> = <span class="title function_ invoke__">imagecreatefrompng</span>(<span class="variable">$backgroundPath</span>);</span><br><span class="line"><span class="variable">$overlay</span> = <span class="title function_ invoke__">imagecreatefrompng</span>(<span class="variable">$overlayPath</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取目标图片的宽度和高度</span></span><br><span class="line"><span class="variable">$overlayWidth</span> = <span class="title function_ invoke__">imagesx</span>(<span class="variable">$overlay</span>);</span><br><span class="line"><span class="variable">$overlayHeight</span> = <span class="title function_ invoke__">imagesy</span>(<span class="variable">$overlay</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将目标图片叠加到背景图片上</span></span><br><span class="line"><span class="title function_ invoke__">imagecopy</span>(<span class="variable">$background</span>, <span class="variable">$overlay</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="variable">$overlayWidth</span>, <span class="variable">$overlayHeight</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个新的图像资源</span></span><br><span class="line"><span class="variable">$output</span> = <span class="title function_ invoke__">imagecreatetruecolor</span>(<span class="variable">$overlayWidth</span>, <span class="variable">$overlayHeight</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 复制叠加后的图像到输出图像</span></span><br><span class="line"><span class="title function_ invoke__">imagecopy</span>(<span class="variable">$output</span>, <span class="variable">$background</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="variable">$overlayWidth</span>, <span class="variable">$overlayHeight</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;content-type:image/png&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">ob_start</span>();</span><br><span class="line"><span class="title function_ invoke__">imagejpeg</span>(<span class="variable">$output</span>);</span><br><span class="line"><span class="variable">$content</span> = <span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line"><span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$content</span>;</span><br><span class="line"><span class="keyword">die</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python先顺序分组然后打乱分组顺序</title>
      <link href="/blog/p/2023PythonSequential/"/>
      <url>/blog/p/2023PythonSequential/</url>
      
        <content type="html"><![CDATA[<p>Python先顺序分组然后打乱分组顺序</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 合并ts视频</span></span><br><span class="line"><span class="keyword">import</span> os,time ,random, shutil</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义循环次数</span></span><br><span class="line">loop_times = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#用来分组排序的数组</span></span><br><span class="line">mySortArr = []</span><br><span class="line">path = <span class="string">r&quot;D:\XXX\视频ts文件夹&quot;</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> os.listdir(path):</span><br><span class="line">    <span class="keyword">if</span> file.endswith(<span class="string">&#x27;.ts&#x27;</span>):</span><br><span class="line">       mySortArr.append(file)</span><br><span class="line"></span><br><span class="line"><span class="comment">#每个分组最小包含文件数</span></span><br><span class="line">maxFileNum = <span class="number">4</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_all_index</span>(<span class="params">arr, item</span>):</span><br><span class="line">    <span class="keyword">return</span> [i <span class="keyword">for</span> i, a <span class="keyword">in</span> <span class="built_in">enumerate</span>(arr) <span class="keyword">if</span> a == item]</span><br><span class="line">randomListMax = <span class="built_in">len</span>(mySortArr)*<span class="number">100</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sortA</span>(<span class="params">filelist</span>):</span><br><span class="line">    tempGroupList = []</span><br><span class="line">    <span class="comment">#分组</span></span><br><span class="line">    groupList = []</span><br><span class="line">    tempGroupLIst = []</span><br><span class="line">    tempGroupAppendIndex=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> tempGroupAppendIndex &lt; randomListMax+<span class="number">1</span>:</span><br><span class="line">      groupList.append(<span class="number">0</span>)</span><br><span class="line">      tempGroupAppendIndex += <span class="number">1</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    countNum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> files <span class="keyword">in</span> filelist:   <span class="comment">#遍历所有文件</span></span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line">        countNum +=<span class="number">1</span></span><br><span class="line">        tempGroupList.append(files)</span><br><span class="line">        randomIndex = random.randint(<span class="number">0</span>,randomListMax)  </span><br><span class="line">        hasPlaceholder = find_all_index(groupList,tempGroupLIst)</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">len</span>(hasPlaceholder)!=<span class="number">0</span>):</span><br><span class="line">          randomIndex = random.randint(<span class="number">0</span>,randomListMax)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> countNum &gt;= maxFileNum :    </span><br><span class="line">             countNum = <span class="number">0</span>            </span><br><span class="line">            <span class="comment">#  print(randomIndex,&quot;randomIndex&quot;)      </span></span><br><span class="line">             rIndex = <span class="number">0</span></span><br><span class="line">             <span class="keyword">for</span> tempItem <span class="keyword">in</span> tempGroupList:</span><br><span class="line">                  rIndex+=<span class="number">1</span></span><br><span class="line">                  groupList[randomIndex+rIndex] = tempItem</span><br><span class="line">             tempItemR = <span class="built_in">reversed</span>(tempGroupList)    <span class="comment"># 倒序           </span></span><br><span class="line">             <span class="keyword">for</span> tempItem <span class="keyword">in</span> tempItemR:</span><br><span class="line">                  groupList[randomIndex+rIndex+<span class="built_in">len</span>(tempGroupLIst)] = tempItem    </span><br><span class="line">                  rIndex+=<span class="number">1</span>      </span><br><span class="line">             tempItemR = []</span><br><span class="line">             tempGroupList = []</span><br><span class="line"></span><br><span class="line">    removeGroupList = groupList</span><br><span class="line">    listRes = []</span><br><span class="line">    <span class="keyword">for</span> groupItemOld <span class="keyword">in</span> removeGroupList:      </span><br><span class="line">      <span class="keyword">if</span>(groupItemOld!=<span class="number">0</span>):</span><br><span class="line">        listRes.append(groupItemOld) </span><br><span class="line">    <span class="comment"># random.shuffle(filelist)</span></span><br><span class="line">    <span class="comment"># print(listRes,&quot;listRes&quot;)</span></span><br><span class="line">    <span class="keyword">return</span> listRes</span><br><span class="line"><span class="comment">#/sort$############################</span></span><br><span class="line"></span><br><span class="line">mySortArr = sortA(mySortArr)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 执行循环遍历</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, loop_times + <span class="number">1</span>):</span><br><span class="line">  <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>.txt&quot;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:     </span><br><span class="line">    <span class="keyword">for</span> content <span class="keyword">in</span> mySortArr:   </span><br><span class="line">        f.write(<span class="string">f&quot;file &#x27;<span class="subst">&#123;content&#125;</span>&#x27;\n&quot;</span>)</span><br><span class="line">    <span class="comment"># print(f&quot;&#123;i&#125;.txt 文件生成成功！&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#quit()</span></span><br><span class="line"><span class="comment"># 合并txt文件</span></span><br><span class="line">os.system(<span class="string">&#x27;copy /B ?*.txt output.txt&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;合并txt文件成功！&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除生成的i.txt文件</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, loop_times + <span class="number">1</span>):</span><br><span class="line">    os.remove(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>.txt&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;i.txt 文件删除成功！&quot;</span>)</span><br><span class="line"><span class="comment"># 执行ffmpeg合并</span></span><br><span class="line">os.system(<span class="string">&#x27;ffmpeg -f concat -safe 0 -i output.txt -c copy 合成视频.mp4&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;ffmpeg合并成功！&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;ok&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除 output.txt 文件</span></span><br><span class="line">os.remove(<span class="string">&#x27;output.txt&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;output.txt 文件删除成功！&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除当前目录下所有.ts格式的视频文件</span></span><br><span class="line"><span class="keyword">for</span> filename <span class="keyword">in</span> os.listdir(<span class="string">&#x27;.&#x27;</span>):</span><br><span class="line">    <span class="keyword">if</span> filename.endswith(<span class="string">&#x27;.ts&#x27;</span>):</span><br><span class="line">        os.remove(filename)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;.ts格式 文件删除成功！&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除所有前缀为images_的文件夹</span></span><br><span class="line"><span class="keyword">for</span> foldername <span class="keyword">in</span> os.listdir(<span class="string">&#x27;.&#x27;</span>):</span><br><span class="line">    <span class="keyword">if</span> foldername.startswith(<span class="string">&#x27;images_&#x27;</span>):</span><br><span class="line">        shutil.rmtree(foldername)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;images_ 文件删除成功！&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fastadmin引入layui,并调用layui接口</title>
      <link href="/blog/p/2023IntroducingLayui/"/>
      <url>/blog/p/2023IntroducingLayui/</url>
      
        <content type="html"><![CDATA[<h2 id="第一种方式-全局引入"><a href="#第一种方式-全局引入" class="headerlink" title="第一种方式,全局引入"></a>第一种方式,全局引入</h2><h3 id="先去-layui-官网-下载整个仓库-有-dist-src-目录的"><a href="#先去-layui-官网-下载整个仓库-有-dist-src-目录的" class="headerlink" title="先去 layui 官网,下载整个仓库 , 有 dist,src 目录的"></a>先去 layui 官网,下载整个仓库 , 有 dist,src 目录的</h3><p><a href="https://gitee.com/layui/layui">https://gitee.com/layui/layui</a></p><h3 id="把下载的-layui-放到如下目录"><a href="#把下载的-layui-放到如下目录" class="headerlink" title="把下载的 layui 放到如下目录:"></a>把下载的 layui 放到如下目录:</h3><blockquote><p>public&#x2F;libs&#x2F;layui</p></blockquote><h3 id="在下面的文件里-添加-layui-paths-和-shim-中分别添加"><a href="#在下面的文件里-添加-layui-paths-和-shim-中分别添加" class="headerlink" title="在下面的文件里,添加 layui,paths 和 shim 中分别添加"></a>在下面的文件里,添加 layui,paths 和 shim 中分别添加</h3><blockquote><p>public&#x2F;assets&#x2F;js&#x2F;require-backend.js</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">require</span>.<span class="title function_">config</span>(&#123;</span><br><span class="line">  <span class="attr">paths</span>: &#123;</span><br><span class="line">    <span class="comment">//添加layui</span></span><br><span class="line">    <span class="attr">layui</span>: <span class="string">&quot;../libs/layui/src/layui&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// shim依赖配置</span></span><br><span class="line">  <span class="attr">shim</span>: &#123;</span><br><span class="line">    <span class="comment">//添加layui</span></span><br><span class="line">    <span class="attr">layui</span>: &#123;</span><br><span class="line">      <span class="attr">deps</span>: [<span class="string">&quot;css!../libs/layui/src/css/layui.css&quot;</span>],</span><br><span class="line">      <span class="attr">init</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;在这里init了layui&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">layui</span>.<span class="title function_">config</span>(&#123; <span class="attr">dir</span>: <span class="string">&quot;/assets/libs/layui/src/&quot;</span> &#125;);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="目标页-JS-调用"><a href="#目标页-JS-调用" class="headerlink" title="目标页 JS 调用"></a>目标页 JS 调用</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">define</span>([<span class="string">&quot;jquery&quot;</span>, <span class="string">&quot;bootstrap&quot;</span>, <span class="string">&quot;backend&quot;</span>, <span class="string">&quot;form&quot;</span>, <span class="string">&quot;table&quot;</span>, <span class="string">&quot;layui&quot;</span>], <span class="keyword">function</span> (<span class="params"></span></span><br><span class="line"><span class="params">  $,</span></span><br><span class="line"><span class="params">  <span class="literal">undefined</span>,</span></span><br><span class="line"><span class="params">  Backend,</span></span><br><span class="line"><span class="params">  Form,</span></span><br><span class="line"><span class="params">  Table,</span></span><br><span class="line"><span class="params">  layui</span></span><br><span class="line"><span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> <span class="title class_">Controller</span> = &#123;</span><br><span class="line">    <span class="attr">index</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">//在这里进行调用</span></span><br><span class="line">      layui.<span class="title function_">use</span>([<span class="string">&quot;form&quot;</span>, <span class="string">&quot;upload&quot;</span>], <span class="keyword">function</span> (<span class="params">form, upload</span>) &#123;&#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Controller</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>一键压缩打包前后台的JS和CSS, 根目录中执行下面命令后,在浏览器清除缓存刷新才能生效</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php think min -m all -r all</span><br></pre></td></tr></table></figure><h2 id="二-动态引入"><a href="#二-动态引入" class="headerlink" title="二:动态引入"></a>二:动态引入</h2><h3 id="首先在public-assets-js-backend-init-js中定义依赖配置"><a href="#首先在public-assets-js-backend-init-js中定义依赖配置" class="headerlink" title="首先在public&#x2F;assets&#x2F;js&#x2F;backend-init.js中定义依赖配置"></a>首先在public&#x2F;assets&#x2F;js&#x2F;backend-init.js中定义依赖配置</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">define</span>([<span class="string">&#x27;backend&#x27;</span>], <span class="keyword">function</span> (<span class="params">Backend</span>) &#123;</span><br><span class="line">    <span class="built_in">require</span>.<span class="title function_">config</span>(&#123;</span><br><span class="line">        <span class="attr">paths</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;layui&#x27;</span>: <span class="string">&#x27;../libs/layui/src/layui&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">shim</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;layui&#x27;</span>: &#123;</span><br><span class="line">                <span class="attr">deps</span>: [<span class="string">&#x27;css!../libs/layui/src/css/layui.css&#x27;</span>],</span><br><span class="line">                <span class="attr">init</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;在这里init了layui&quot;</span>)</span><br><span class="line">                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">layui</span>.<span class="title function_">config</span>(&#123; <span class="attr">dir</span>: <span class="string">&#x27;/assets/libs/layui/src/&#x27;</span> &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="目标页-JS-调用-1"><a href="#目标页-JS-调用-1" class="headerlink" title="目标页 JS 调用"></a>目标页 JS 调用</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">define</span>([<span class="string">&quot;jquery&quot;</span>, <span class="string">&quot;bootstrap&quot;</span>, <span class="string">&quot;backend&quot;</span>, <span class="string">&quot;form&quot;</span>, <span class="string">&quot;table&quot;</span>, <span class="string">&quot;layui&quot;</span>], <span class="keyword">function</span> (<span class="params"></span></span><br><span class="line"><span class="params">  $,</span></span><br><span class="line"><span class="params">  <span class="literal">undefined</span>,</span></span><br><span class="line"><span class="params">  Backend,</span></span><br><span class="line"><span class="params">  Form,</span></span><br><span class="line"><span class="params">  Table,</span></span><br><span class="line"><span class="params">  layui</span></span><br><span class="line"><span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> <span class="title class_">Controller</span> = &#123;</span><br><span class="line">    <span class="attr">index</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">//在这里进行调用</span></span><br><span class="line">      <span class="built_in">require</span>([<span class="string">&quot;layui&quot;</span>], <span class="keyword">function</span> (<span class="params"><span class="literal">undefined</span></span>) &#123;</span><br><span class="line">        layui.<span class="title function_">use</span>([<span class="string">&quot;form&quot;</span>, <span class="string">&quot;upload&quot;</span>], <span class="keyword">function</span> (<span class="params">form, upload</span>) &#123;&#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Controller</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>一键压缩打包前后台的JS和CSS, 根目录中执行下面命令后,在浏览器清除缓存刷新才能生效</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php think min -m all -r all</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 文件夹内文件 批量打乱顺序后,重新排序,批量重命名</title>
      <link href="/blog/p/2023PythonBatch/"/>
      <url>/blog/p/2023PythonBatch/</url>
      
        <content type="html"><![CDATA[<p>手头有一个几万张图片需要进行打乱顺序,并重新命名,使用python来实现</p><p>第一步先对文件夹内的文件批量打乱顺序</p><p>第二步重新排序</p><p>第三步批量重命名</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os ,random , time</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rename</span>():</span><br><span class="line">    <span class="comment"># 配置</span></span><br><span class="line">    <span class="comment">#文件扩展名</span></span><br><span class="line">    filetype = <span class="string">&#x27;.png&#x27;</span></span><br><span class="line">    <span class="comment">#文件名前缀</span></span><br><span class="line">    filename = <span class="string">&#x27;&#x27;</span>  </span><br><span class="line">    <span class="comment"># 文件名位数,不足的前面补0</span></span><br><span class="line">    zfillNum = <span class="number">5</span></span><br><span class="line">    <span class="comment"># 在这里配置文件夹地址</span></span><br><span class="line">    path = <span class="string">r&quot;C:\Users\xxxx\Desktop\test&quot;</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    filelist = os.listdir(path)   <span class="comment">#该文件夹下所有的文件（包括文件夹）</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#先打乱顺序 </span></span><br><span class="line">    random.shuffle(filelist)</span><br><span class="line">    <span class="keyword">for</span> files <span class="keyword">in</span> filelist:   <span class="comment">#遍历所有文件</span></span><br><span class="line">        Olddir = os.path.join(path, files)    <span class="comment">#原来的文件路径</span></span><br><span class="line">        <span class="keyword">if</span> os.path.isdir(Olddir):       <span class="comment">#如果是文件夹则跳过</span></span><br><span class="line">                <span class="keyword">continue</span>   </span><br><span class="line">        filenameRes = <span class="built_in">str</span>(<span class="built_in">int</span>(time.time())+random.randint(<span class="number">1000000</span>,<span class="number">88888888</span>))</span><br><span class="line">        Newdir = os.path.join(path, filenameRes + filetype)   <span class="comment">#新的文件路径</span></span><br><span class="line">        os.rename(Olddir, Newdir)    <span class="comment">#重命名</span></span><br><span class="line"></span><br><span class="line">    filelist = os.listdir(path)   <span class="comment">#该文件夹下所有的文件（包括文件夹）</span></span><br><span class="line">    <span class="keyword">for</span> files <span class="keyword">in</span> filelist:   <span class="comment">#遍历所有文件</span></span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line">        Olddir = os.path.join(path, files)    <span class="comment">#原来的文件路径</span></span><br><span class="line">        <span class="keyword">if</span> os.path.isdir(Olddir):       <span class="comment">#如果是文件夹则跳过</span></span><br><span class="line">                <span class="keyword">continue</span>   </span><br><span class="line">        filenameNum = <span class="built_in">str</span>(i).zfill(zfillNum)</span><br><span class="line">        filenameRes = filename+filenameNum</span><br><span class="line">        Newdir = os.path.join(path, filenameRes + filetype)   <span class="comment">#新的文件路径</span></span><br><span class="line">        os.rename(Olddir, Newdir)    <span class="comment">#重命名</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    rename()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VCARD手机相机扫码或微信扫码,直接保存到通讯录</title>
      <link href="/blog/p/2023SaveVCARD/"/>
      <url>/blog/p/2023SaveVCARD/</url>
      
        <content type="html"><![CDATA[<p>VCARD手机相机扫码或微信扫码,直接保存到通讯录<br>将以下内容生成二维码, 使用手机扫码时将自动弹出保存通讯录,兼容Android&#x2F;IOS</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BEGIN:VCARD</span><br><span class="line"></span><br><span class="line">VERSION:3.0</span><br><span class="line"></span><br><span class="line">N:名字</span><br><span class="line"></span><br><span class="line">ORG:公司名字</span><br><span class="line"></span><br><span class="line">TITLE:职位新人研发</span><br><span class="line"></span><br><span class="line">TEL;TYPE=WORK:18888886686</span><br><span class="line"></span><br><span class="line">TEL;TYPE=HOME:18888888888</span><br><span class="line"></span><br><span class="line">ADR;TYPE=HOME:;;地址1;;;;</span><br><span class="line"></span><br><span class="line">LABEL;TYPE=HOME:地址2</span><br><span class="line"></span><br><span class="line">,  </span><br><span class="line"></span><br><span class="line">EMAIL:email@gmail.com</span><br><span class="line"></span><br><span class="line">URL:www.abc.com</span><br><span class="line"></span><br><span class="line">BDAY:2023-04-23</span><br><span class="line"></span><br><span class="line">REV:2023-04-23T01:21:04Z</span><br><span class="line"></span><br><span class="line">END:VCARD</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vcard </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>electron 解决socket端口被占用问题 启动socket服务,自动尝试可用接口</title>
      <link href="/blog/p/2023OElectron/"/>
      <url>/blog/p/2023OElectron/</url>
      
        <content type="html"><![CDATA[<p>原理是本地写一个config.json,把初始端口放进去,每次启动electron的socket服务时如果发现端口被占用,就更新config.json里的端口号加1,并保存到config.json,然后退出并重启electron,直到找到可用的端口</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;port&quot;</span><span class="punctuation">:</span><span class="number">1081</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; app, <span class="title class_">BrowserWindow</span>, protocol, dialog &#125; = <span class="built_in">require</span>(<span class="string">&quot;electron&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">Menu</span> &#125; = <span class="built_in">require</span>(<span class="string">&quot;electron&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> myMenu = <span class="built_in">require</span>(<span class="string">&quot;./src/menu.js&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">WebSocket</span> = <span class="built_in">require</span>(<span class="string">&quot;ws&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="comment">//wss通讯服务</span></span><br><span class="line">  <span class="keyword">let</span> wss = &#123;&#125;;</span><br><span class="line">  <span class="title function_">openWs</span>();</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">openWs</span>(<span class="params"></span>) &#123;</span><br><span class="line">    fs.<span class="title function_">readFile</span>(<span class="string">&quot;config.json&quot;</span>, <span class="string">&quot;utf-8&quot;</span>, <span class="function">(<span class="params">err, configFileDataRes</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        dialog.<span class="title function_">showMessageBox</span>(&#123;</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&quot;info&quot;</span>,</span><br><span class="line">          <span class="attr">title</span>: <span class="string">&quot;读取配置文件失败&quot;</span>,</span><br><span class="line">          <span class="attr">message</span>: <span class="string">&quot;请重新安装&quot;</span>,</span><br><span class="line">          <span class="attr">detail</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(err),</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">throw</span> err;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">const</span> configFileData = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(configFileDataRes);</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        wss = <span class="keyword">new</span> <span class="title class_">WebSocket</span>.<span class="title class_">Server</span>(&#123; <span class="attr">port</span>: configFileData.<span class="property">port</span> &#125;);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;创建webSocket失败:&quot;</span>, error);</span><br><span class="line">      &#125;</span><br><span class="line">      wss.<span class="title function_">on</span>(<span class="string">&quot;connection&quot;</span>, <span class="function">(<span class="params">ws</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(ws, configFileData.<span class="property">port</span> + <span class="string">&quot;成功了&quot;</span>);</span><br><span class="line">        <span class="comment">/** 调用原生electron接口</span></span><br><span class="line"><span class="comment">         * &#123;&quot;type&quot;:&quot;open_page&quot;,&quot;src&quot;:&quot;pages/play/index.html&quot;,&quot;big&quot;:true&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        ws.<span class="title function_">on</span>(<span class="string">&quot;message&quot;</span>, <span class="function">(<span class="params">message</span>) =&gt;</span> &#123;</span><br><span class="line">          message = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(message);</span><br><span class="line">          <span class="keyword">if</span> (message.<span class="property">type</span> == <span class="string">&quot;open_page&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> win = <span class="keyword">new</span> <span class="title class_">BrowserWindow</span>();</span><br><span class="line">            win.<span class="title function_">loadFile</span>(message.<span class="property">src</span>);</span><br><span class="line">            win.<span class="property">webContents</span>.<span class="title function_">openDevTools</span>(&#123; <span class="attr">mode</span>: <span class="string">&quot;detach&quot;</span> &#125;);</span><br><span class="line">            <span class="keyword">if</span> (message.<span class="property">big</span>) &#123;</span><br><span class="line">              win.<span class="title function_">maximize</span>();</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        ws.<span class="title function_">send</span>(<span class="string">&quot;something&quot;</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">      wss.<span class="title function_">on</span>(<span class="string">&quot;error&quot;</span>, <span class="function">(<span class="params">ws</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">storeData</span>(&#123; <span class="attr">port</span>: <span class="built_in">parseInt</span>(configFileData.<span class="property">port</span>) + <span class="number">1</span> &#125;, <span class="string">&quot;config.json&quot;</span>);</span><br><span class="line">        app.<span class="title function_">exit</span>();</span><br><span class="line">        app.<span class="title function_">relaunch</span>();</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// /wss通讯服务</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> electron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一次参加半马</title>
      <link href="/blog/p/2023Myfirsttimeparticipating/"/>
      <url>/blog/p/2023Myfirsttimeparticipating/</url>
      
        <content type="html"><![CDATA[<p>这周末和女朋友一起参加半马,青岛西海岸风景真不错,新铺的马路贼宽敞,七点多就开始交通管制了,我们只能打车到附近然后走过去 </p><p>比赛现场很热闹,没文化的我现场只能来一句只能来一句人好多啊,气氛真的很好,菜腿第一次参加没敢直接报名半马,报了五公里健康跑😄</p><p>坚持不懈的青春万岁  加油💪奥力给 </p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2023/1%20%281%29.jpg","alt":"","title":""},{"url":"https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2023/1%20%282%29.jpg","alt":"","title":""},{"url":"https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2023/1%20%283%29.jpg","alt":"","title":""},{"url":"https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2023/1%20%284%29.jpg","alt":"","title":""},{"url":"https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2023/1%20%285%29.jpg","alt":"","title":""},{"url":"https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2023/1%20%286%29.jpg","alt":"","title":""},{"url":"https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2023/1%20%287%29.jpg","alt":"","title":""},{"url":"https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2023/1%20%288%29.jpg","alt":"","title":""}]</div>  </div>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 马拉松 </tag>
            
            <tag> 跑步 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS飞入飞出动画 加速动画 换入换出效果</title>
      <link href="/blog/p/2023JSFlying/"/>
      <url>/blog/p/2023JSFlying/</url>
      
        <content type="html"><![CDATA[<p>JS飞入飞出动画 加速动画 换入换出效果</p><p>在线预览 <a href="/my/demo/fly.html">&#x2F;my&#x2F;demo&#x2F;fly.html</a> online visit </p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;gift-fly&quot;</span> <span class="attr">style</span>=<span class="string">&quot; position: absolute; width: 50px;height: 50px;background-color: #327dff &quot;</span>&gt;</span> 动画盒子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> flyDiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;gift-fly&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">animate</span>(flyDiv, &#123;<span class="string">&quot;left&quot;</span>: <span class="number">500</span>&#125;, <span class="number">3000</span>, <span class="string">&quot;easeIn&quot;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;飞入动画执行完了&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">animate</span>(flyDiv, &#123;<span class="string">&quot;left&quot;</span>: <span class="number">0</span>&#125;, <span class="number">3000</span>, <span class="string">&quot;easeOut&quot;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;飞出动画执行完了&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * <span class="doctag">@param</span> elem &#123;HTMLElement&#125; 执行动画的HTML元素</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * <span class="doctag">@param</span> params &#123;JSON&#125; 动画执行过过程中需要修改的HTML属性</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * <span class="doctag">@param</span> duration &#123;Number&#125; 可选，动画执行时间，单位毫秒</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * <span class="doctag">@param</span> easing &#123;String&#125; 可选，动画执行的方式，缓入easeIn、缓出easeOut</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params">elem, params, duration, easing</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">success</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">             * 描述: tween动画算法。</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">             * @param Number t: 动画已经执行的时间（实际上时执行多少次/帧数）</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">             * @param Number b: 起始位置</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">             * @param Number c: 终止位置</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">             * @param Number d: 从起始位置到终止位置的经过时间（实际上时执行多少次/帧数）</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">             */</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> tween = &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">easeIn</span>: <span class="keyword">function</span> (<span class="params">t, b, c, d</span>) &#123;<span class="comment">//缓入</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> c * (t /= d) * t + b;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">easeOut</span>: <span class="keyword">function</span> (<span class="params">t, b, c, d</span>) &#123;<span class="comment">//缓出</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> -c * (t /= d) * (t - <span class="number">2</span>) + b;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> attribute = &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">get</span>: <span class="keyword">function</span> (<span class="params">elem, attr</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">let</span> val;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (elem.<span class="property">currentStyle</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">if</span> (attr === <span class="string">&quot;opacity&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                            val = elem.<span class="property">filters</span>.<span class="property">alpha</span>[attr];</span></span><br><span class="line"><span class="language-javascript">                        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                            val = elem.<span class="property">currentStyle</span>[attr];</span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                        val = <span class="title function_">getComputedStyle</span>(elem)[attr];</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">if</span> (attr === <span class="string">&quot;opacity&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                            val = <span class="number">100</span> * val;</span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> val;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">set</span>: <span class="keyword">function</span> (<span class="params">elem, attr, val</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (attr == <span class="string">&#x27;opacity&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        elem.<span class="property">style</span>.<span class="property">filter</span> = <span class="string">&#x27;alpha(opacity=&#x27;</span> + (val) + <span class="string">&#x27;)&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                        elem.<span class="property">style</span>.<span class="property">opacity</span> = (val) / <span class="number">100</span>;</span></span><br><span class="line"><span class="language-javascript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                        elem.<span class="property">style</span>[attr] = val + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> effect = &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">animate</span>: <span class="keyword">function</span> (<span class="params">elem, params, duration, easing</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">let</span> dt = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>(),</span></span><br><span class="line"><span class="language-javascript">                        b = <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">                        c = <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">                        d = duration || <span class="number">500</span>,</span></span><br><span class="line"><span class="language-javascript">                        fps = <span class="number">1000</span> / <span class="number">60</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">let</span> changes = [];</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">for</span> (<span class="keyword">let</span> attr <span class="keyword">in</span> params) &#123;</span></span><br><span class="line"><span class="language-javascript">                        b = <span class="built_in">parseFloat</span>(attribute.<span class="title function_">get</span>(elem, attr));</span></span><br><span class="line"><span class="language-javascript">                        c = params[attr] - b;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                        changes.<span class="title function_">push</span>(&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">attr</span>: attr,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">b</span>: b,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">c</span>: c</span></span><br><span class="line"><span class="language-javascript">                        &#125;);</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    easing = easing || <span class="string">&quot;easeOut&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                    <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">let</span> t = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>() - dt;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">let</span> b, c, attr;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; changes.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">                            b = changes[i].<span class="property">b</span>;</span></span><br><span class="line"><span class="language-javascript">                            c = changes[i].<span class="property">c</span>;</span></span><br><span class="line"><span class="language-javascript">                            attr = changes[i].<span class="property">attr</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                            attribute.<span class="title function_">set</span>(elem, attr, tween[easing](t, b, c, d));</span></span><br><span class="line"><span class="language-javascript">                            <span class="keyword">if</span> (d &lt;= t) &#123;</span></span><br><span class="line"><span class="language-javascript">                                attribute.<span class="title function_">set</span>(elem, attr, params[attr]);</span></span><br><span class="line"><span class="language-javascript">                                <span class="title function_">success</span>();</span></span><br><span class="line"><span class="language-javascript">                                <span class="keyword">return</span>;</span></span><br><span class="line"><span class="language-javascript">                            &#125;</span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                        <span class="built_in">setTimeout</span>(<span class="variable language_">arguments</span>.<span class="property">callee</span>, fps);</span></span><br><span class="line"><span class="language-javascript">                    &#125;, fps);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;;</span></span><br><span class="line"><span class="language-javascript">            effect.<span class="title function_">animate</span>(elem, params, duration, easing);</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go排序结构体struct中字段提升性能,降低内存使用率</title>
      <link href="/blog/p/2023PerformanceOptimization/"/>
      <url>/blog/p/2023PerformanceOptimization/</url>
      
        <content type="html"><![CDATA[<p>将第一个struct改写为第二种可以通过排序结构体struct中字段提升性能,降低内存使用率</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> BadStruct <span class="keyword">struct</span> &#123;</span><br><span class="line">    age          <span class="type">uint8</span></span><br><span class="line">    IdCardNumber <span class="type">uint64</span></span><br><span class="line">    DateOfBirth  <span class="type">uint16</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> GoodStruct <span class="keyword">struct</span> &#123;</span><br><span class="line">    age          <span class="type">uint8</span></span><br><span class="line">    DateOfBirth  <span class="type">uint16</span></span><br><span class="line">    IdCardNumber <span class="type">uint64</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> struct </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go ioutil包1.16起弃用 使用io包代替</title>
      <link href="/blog/p/2022GoioutilPackage/"/>
      <url>/blog/p/2022GoioutilPackage/</url>
      
        <content type="html"><![CDATA[<p>20 年 10 月份，Go 掌舵人 Russ Cox 已经有废弃 ioutil 包的提案[1]，废弃原因是:io&#x2F;ioutil, like most things with util in the name, has turned out to be a poorly defined and hard to understand collection of things.</p><p>后续的几次代码提交也证实了这一点，从 Go 1.16 开始会废弃 io&#x2F;ioutil 包，相关的功能会挪到 io 包或 os 包</p><p>相关连接 <a href="https://github.com/go-critic/go-critic/issues/1019">https://github.com/go-critic/go-critic/issues/1019</a></p><p>例如 ioutil.NopCloser方法, 改为io.NopCloser方法即可</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go sha256withRSA签名 base64</title>
      <link href="/blog/p/2022Gosha256/"/>
      <url>/blog/p/2022Gosha256/</url>
      
        <content type="html"><![CDATA[<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> utils</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;crypto&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/rand&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/rsa&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/sha256&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/x509&quot;</span></span><br><span class="line"><span class="string">&quot;encoding/base64&quot;</span></span><br><span class="line"><span class="string">&quot;encoding/pem&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/**实例</span></span><br><span class="line"><span class="comment">//生成密钥文件</span></span><br><span class="line"><span class="comment">GenerateRSAKey(2048)</span></span><br><span class="line"><span class="comment">//模拟发送方</span></span><br><span class="line"><span class="comment">//要发送的消息</span></span><br><span class="line"><span class="comment">msg := []byte(&quot;hello world&quot;)</span></span><br><span class="line"><span class="comment">//生成签名</span></span><br><span class="line"><span class="comment">sign := GetSign(msg, &quot;private.pem&quot;)</span></span><br><span class="line"><span class="comment">fmt.Println(&quot;signlen lenlen&quot;, string(sign))</span></span><br><span class="line"><span class="comment">//模拟接收方</span></span><br><span class="line"><span class="comment">//接受到的消息</span></span><br><span class="line"><span class="comment">acceptmsg := []byte(&quot;hello world&quot;)</span></span><br><span class="line"><span class="comment">//接受到的签名</span></span><br><span class="line"><span class="comment">acceptsign := sign</span></span><br><span class="line"><span class="comment">//验证签名</span></span><br><span class="line"><span class="comment">result := VerifySign(acceptmsg, acceptsign, &quot;public.pem&quot;)</span></span><br><span class="line"><span class="comment">fmt.Println(&quot;验证结果：&quot;, result)</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成RSA私钥和公钥，保存到文件中</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GenerateRSAKey</span><span class="params">(bits <span class="type">int</span>)</span></span> &#123;</span><br><span class="line"><span class="comment">//GenerateKey函数使用随机数据生成器random生成一对具有指定字位数的RSA密钥</span></span><br><span class="line"><span class="comment">//Reader是一个全局、共享的密码用强随机数生成器</span></span><br><span class="line">privateKey, err := rsa.GenerateKey(rand.Reader, bits)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//保存私钥</span></span><br><span class="line"><span class="comment">//通过x509标准将得到的ras私钥序列化为ASN.1 的 DER编码字符串</span></span><br><span class="line">X509PrivateKey := x509.MarshalPKCS1PrivateKey(privateKey)</span><br><span class="line"><span class="comment">//使用pem格式对x509输出的内容进行编码</span></span><br><span class="line"><span class="comment">//创建文件保存私钥</span></span><br><span class="line">privateFile, err := os.Create(<span class="string">&quot;private.pem&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> privateFile.Close()</span><br><span class="line"><span class="comment">//构建一个pem.Block结构体对象</span></span><br><span class="line">privateBlock := pem.Block&#123;Type: <span class="string">&quot;RSA Private Key&quot;</span>, Bytes: X509PrivateKey&#125;</span><br><span class="line"><span class="comment">//将数据保存到文件</span></span><br><span class="line">pem.Encode(privateFile, &amp;privateBlock)</span><br><span class="line"></span><br><span class="line"><span class="comment">//保存公钥</span></span><br><span class="line"><span class="comment">//获取公钥的数据</span></span><br><span class="line">publicKey := privateKey.PublicKey</span><br><span class="line"><span class="comment">//X509对公钥编码</span></span><br><span class="line">X509PublicKey, err := x509.MarshalPKIXPublicKey(&amp;publicKey)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//pem格式编码</span></span><br><span class="line"><span class="comment">//创建用于保存公钥的文件</span></span><br><span class="line">publicFile, err := os.Create(<span class="string">&quot;public.pem&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> publicFile.Close()</span><br><span class="line"><span class="comment">//创建一个pem.Block结构体对象</span></span><br><span class="line">publicBlock := pem.Block&#123;Type: <span class="string">&quot;RSA Public Key&quot;</span>, Bytes: X509PublicKey&#125;</span><br><span class="line"><span class="comment">//保存到文件</span></span><br><span class="line">pem.Encode(publicFile, &amp;publicBlock)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取RSA私钥</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetRSAPrivateKey</span><span class="params">(path <span class="type">string</span>)</span></span> *rsa.PrivateKey &#123;</span><br><span class="line"><span class="comment">//读取文件内容</span></span><br><span class="line">file, err := os.Open(path)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> file.Close()</span><br><span class="line">info, _ := file.Stat()</span><br><span class="line">buf := <span class="built_in">make</span>([]<span class="type">byte</span>, info.Size())</span><br><span class="line">file.Read(buf)</span><br><span class="line"><span class="comment">//pem解码</span></span><br><span class="line">block, _ := pem.Decode(buf)</span><br><span class="line"><span class="comment">//X509解码</span></span><br><span class="line">privateKey, err := x509.ParsePKCS1PrivateKey(block.Bytes)</span><br><span class="line"><span class="keyword">return</span> privateKey</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取RSA公钥</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetRSAPublicKey</span><span class="params">(path <span class="type">string</span>)</span></span> *rsa.PublicKey &#123;</span><br><span class="line"><span class="comment">//读取公钥内容</span></span><br><span class="line">file, err := os.Open(path)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> file.Close()</span><br><span class="line">info, _ := file.Stat()</span><br><span class="line">buf := <span class="built_in">make</span>([]<span class="type">byte</span>, info.Size())</span><br><span class="line">file.Read(buf)</span><br><span class="line"><span class="comment">//pem解码</span></span><br><span class="line">block, _ := pem.Decode(buf)</span><br><span class="line"><span class="comment">//x509解码</span></span><br><span class="line">publicKeyInterface, err := x509.ParsePKIXPublicKey(block.Bytes)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">publicKey := publicKeyInterface.(*rsa.PublicKey)</span><br><span class="line"><span class="keyword">return</span> publicKey</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对消息的散列值进行数字签名</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetSign</span><span class="params">(msg []<span class="type">byte</span>, path <span class="type">string</span>)</span></span> <span class="type">string</span> &#123;</span><br><span class="line"><span class="comment">//取得私钥</span></span><br><span class="line">privateKey := GetRSAPrivateKey(path)</span><br><span class="line"><span class="comment">//计算散列值</span></span><br><span class="line">hash := sha256.New()</span><br><span class="line">hash.Write(msg)</span><br><span class="line">bytes := hash.Sum(<span class="literal">nil</span>)</span><br><span class="line"><span class="comment">//SignPKCS1v15使用RSA PKCS#1 v1.5规定的RSASSA-PKCS1-V1_5-SIGN签名方案计算签名</span></span><br><span class="line">sign, err := rsa.SignPKCS1v15(rand.Reader, privateKey, crypto.SHA256, bytes)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(sign)</span><br><span class="line">&#125;</span><br><span class="line">signStr := base64.StdEncoding.EncodeToString(sign)</span><br><span class="line"><span class="keyword">return</span> signStr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证数字签名</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">VerifySign</span><span class="params">(msg []<span class="type">byte</span>, sign <span class="type">string</span>, path <span class="type">string</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line"><span class="comment">//取得公钥</span></span><br><span class="line">publicKey := GetRSAPublicKey(path)</span><br><span class="line"><span class="comment">//计算消息散列值</span></span><br><span class="line">hash := sha256.New()</span><br><span class="line">hash.Write(msg)</span><br><span class="line">bytes := hash.Sum(<span class="literal">nil</span>)</span><br><span class="line"><span class="comment">//验证数字签名</span></span><br><span class="line">signBaseDe, _ := base64.StdEncoding.DecodeString(sign)</span><br><span class="line">err := rsa.VerifyPKCS1v15(publicKey, crypto.SHA256, bytes, signBaseDe)</span><br><span class="line"><span class="keyword">return</span> err == <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go第二次获取body获取不到问题</title>
      <link href="/blog/p/2022RetrievalinGo/"/>
      <url>/blog/p/2022RetrievalinGo/</url>
      
        <content type="html"><![CDATA[<p>在使用os.ReadAll(r.Body)方法后,需要执行下面方法,将body重新写回去</p><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line">ctx.Request.Body = io.NopCloser(bytes.NewBuffer(signStrByte)) <span class="comment">// 把body再写回去,不然别的地方取不到</span></span><br></pre></td></tr></table></figure><p>经实践发现 使用gin.Context.Bindxxx相关方法 ,也需要执行上述方法重写body</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>golang gin接口签名sign</title>
      <link href="/blog/p/2022golanginterface/"/>
      <url>/blog/p/2022golanginterface/</url>
      
        <content type="html"><![CDATA[<p>golang gin接口签名sign</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">gin.Default().Group(<span class="string">&quot;&quot;</span>).Use(xxx.CheckSign())</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//注册需要签名的路由</span></span><br><span class="line">gin.Default().Group(<span class="string">&quot;testrouter&quot;</span>).POST(<span class="string">&quot;dotest&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(ctx *gin.Context)</span></span> &#123;</span><br><span class="line">response.Result(<span class="number">401</span>, gin.H&#123;&#125;, <span class="string">&quot;hello&quot;</span>, ctx)</span><br><span class="line">&#125;) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sign.go 签名 验签</p><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> xxx</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;crypto/sha256&quot;</span></span><br><span class="line"><span class="string">&quot;encoding/hex&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/flipped-aurora/gin-vue-admin/server/model/common/response&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">SignWrong  = <span class="string">&quot;sign wrong&quot;</span></span><br><span class="line">SignNull   = <span class="string">&quot;sign null&quot;</span></span><br><span class="line">ApiKeyNull = <span class="string">&quot;sign null&quot;</span></span><br><span class="line">UserWrong  = <span class="string">&quot;username wrong&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CheckSign</span><span class="params">()</span></span> gin.HandlerFunc &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">reqData := &amp;RequestHttp&#123;</span><br><span class="line">Ctx:    c,</span><br><span class="line">Params: <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;&#125;,</span><br><span class="line">&#125;</span><br><span class="line">apiKey := c.Request.FormValue(<span class="string">&quot;api_key&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> apiKey == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">response.Result(<span class="number">401</span>, gin.H&#123;&#125;, ApiKeyNull, c)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">apiSecret := <span class="string">&quot;&quot;</span></span><br><span class="line">signReq := c.Request.FormValue(<span class="string">&quot;sign&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> signReq == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">response.Result(<span class="number">401</span>, gin.H&#123;&#125;, SignNull, c)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">signStr := reqData.RequestParams(<span class="string">&quot;sign&quot;</span>) + apiSecret</span><br><span class="line">fmt.Println(signStr, <span class="string">&quot;signStr&quot;</span>)</span><br><span class="line">signReal := SignEncode(signStr)</span><br><span class="line"><span class="keyword">if</span> signReq != signReal &#123;</span><br><span class="line">response.Result(<span class="number">401</span>, gin.H&#123;&#125;, SignWrong, c)</span><br><span class="line">c.Abort()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">c.Next()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@function: SignEncode</span></span><br><span class="line"><span class="comment">//@description: 生成sign</span></span><br><span class="line"><span class="comment">//@param: message string</span></span><br><span class="line"><span class="comment">//@return: sign string</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SignEncode</span><span class="params">(message <span class="type">string</span>)</span></span> <span class="type">string</span> &#123;</span><br><span class="line"><span class="keyword">return</span> GetSHA256HashCode(message)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@function: GetSHA256HashCode</span></span><br><span class="line"><span class="comment">//@description: SHA256生成哈希值</span></span><br><span class="line"><span class="comment">//@param: message string</span></span><br><span class="line"><span class="comment">//@return: hashCode string</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetSHA256HashCode</span><span class="params">(message <span class="type">string</span>)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">messageArr := []<span class="type">byte</span>(message)</span><br><span class="line"><span class="comment">//创建一个基于SHA256算法的hash.Hash接口的对象</span></span><br><span class="line">hash := sha256.New()</span><br><span class="line"><span class="comment">//输入数据</span></span><br><span class="line">hash.Write(messageArr)</span><br><span class="line"><span class="comment">//计算哈希值</span></span><br><span class="line">bytes := hash.Sum(<span class="literal">nil</span>)</span><br><span class="line"><span class="comment">//将字符串编码为16进制格式,返回字符串</span></span><br><span class="line">hashCode := hex.EncodeToString(bytes)</span><br><span class="line"><span class="comment">//返回哈希值</span></span><br><span class="line"><span class="keyword">return</span> hashCode</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>get_request.go 获取请求参数,转换请求参数为string,参数key排序</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> xxx</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;sort&quot;</span></span><br><span class="line"><span class="string">&quot;strings&quot;</span></span><br><span class="line"><span class="string">&quot;sync&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin/binding&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> RequestHttp <span class="keyword">struct</span> &#123;</span><br><span class="line">Ctx    *gin.Context</span><br><span class="line">Params <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">lock   sync.Mutex</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@function: JoinParamsStr</span></span><br><span class="line"><span class="comment">//@description: 请求参数转换字符串</span></span><br><span class="line"><span class="comment">//@param: message string</span></span><br><span class="line"><span class="comment">//@return: a=1&amp;b=2 string</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *RequestHttp)</span></span> JoinParamsStr() <span class="type">string</span> &#123;</span><br><span class="line"><span class="comment">//先按key 排序 升序 ASCII 升序</span></span><br><span class="line">keys := <span class="built_in">make</span>([]<span class="type">string</span>, <span class="number">0</span>, <span class="built_in">len</span>(r.Params))</span><br><span class="line"><span class="keyword">for</span> k := <span class="keyword">range</span> r.Params &#123;</span><br><span class="line">keys = <span class="built_in">append</span>(keys, k)</span><br><span class="line">&#125;</span><br><span class="line">sort.Strings(keys)</span><br><span class="line"><span class="keyword">var</span> params []<span class="type">string</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(r.Params) &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, k := <span class="keyword">range</span> keys &#123;</span><br><span class="line">params = <span class="built_in">append</span>(params, fmt.Sprintf(<span class="string">&quot;%s=%v&quot;</span>, k, r.Params[k]))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> strings.Join(params, <span class="string">&quot;&amp;&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@function: RequestParams</span></span><br><span class="line"><span class="comment">//@description: 获取参数集合</span></span><br><span class="line"><span class="comment">//@param: exclude string 排除key</span></span><br><span class="line"><span class="comment">//@return: hashCode string</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *RequestHttp)</span></span> RequestParams(exclude <span class="type">string</span>) <span class="type">string</span> &#123;</span><br><span class="line">ctx := r.Ctx</span><br><span class="line">bindParams := <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;&#125;</span><br><span class="line"><span class="keyword">if</span> ctx.Request.Method == <span class="string">&quot;POST&quot;</span> &#123;</span><br><span class="line">contextType := ctx.Request.Header.Get(<span class="string">&quot;Content-Type&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> contextType == <span class="string">&quot;application/json&quot;</span> &#123;</span><br><span class="line">err := ctx.ShouldBindBodyWith(&amp;bindParams, binding.JSON)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123; <span class="comment">//报错</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;nyx_request_mid_error %v,err: %v \n&quot;</span>, bindParams, err)</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(bindParams) &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">for</span> k, v := <span class="keyword">range</span> bindParams &#123;</span><br><span class="line">r.Add(k, v)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">_ = ctx.Request.ParseMultipartForm(<span class="number">32</span> &lt;&lt; <span class="number">20</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(ctx.Request.PostForm) &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">for</span> k, v := <span class="keyword">range</span> ctx.Request.PostForm &#123;</span><br><span class="line">r.Add(k, v[<span class="number">0</span>])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">var</span> tmpParams = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">string</span>)</span><br><span class="line">err2 := ctx.ShouldBind(&amp;tmpParams)</span><br><span class="line"><span class="keyword">if</span> err2 != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;nyx_request_mid_error %v,err: %v \n&quot;</span>, bindParams, err2)</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> k, v := <span class="keyword">range</span> tmpParams &#123;</span><br><span class="line">r.Add(k, v)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">r.Delete(exclude)</span><br><span class="line"><span class="keyword">return</span> r.JoinParamsStr()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加参数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *RequestHttp)</span></span> Add(key <span class="type">string</span>, value <span class="keyword">interface</span>&#123;&#125;) &#123;</span><br><span class="line">r.lock.Lock()</span><br><span class="line">r.Params[key] = value</span><br><span class="line">r.lock.Unlock()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除参数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *RequestHttp)</span></span> Delete(key <span class="type">string</span>) &#123;</span><br><span class="line">r.lock.Lock()</span><br><span class="line"><span class="keyword">if</span> _, ok := r.Params[key]; ok &#123;</span><br><span class="line"><span class="built_in">delete</span>(r.Params, key)</span><br><span class="line">&#125;</span><br><span class="line">r.lock.Unlock()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何在手机上清除公众号页面授权? 在微信上清除公众号个人信息授权</title>
      <link href="/blog/p/2022HowtoClearWeChat/"/>
      <url>/blog/p/2022HowtoClearWeChat/</url>
      
        <content type="html"><![CDATA[<h4 id="1-首先取关公众号"><a href="#1-首先取关公众号" class="headerlink" title="1.首先取关公众号"></a>1.首先取关公众号</h4><h4 id="2-然后重新搜索公众号名称-找到公众号后点击进入公众号页面"><a href="#2-然后重新搜索公众号名称-找到公众号后点击进入公众号页面" class="headerlink" title="2.然后重新搜索公众号名称,找到公众号后点击进入公众号页面"></a>2.然后重新搜索公众号名称,找到公众号后点击进入公众号页面</h4><h4 id="3-点击右上角三个点-在弹出的菜单中选择”设置”"><a href="#3-点击右上角三个点-在弹出的菜单中选择”设置”" class="headerlink" title="3.点击右上角三个点,在弹出的菜单中选择”设置”"></a>3.点击右上角三个点,在弹出的菜单中选择”设置”</h4><h4 id="4-点击”已获取的信息”"><a href="#4-点击”已获取的信息”" class="headerlink" title="4.点击”已获取的信息”"></a>4.点击”已获取的信息”</h4><h4 id="5-点击管理按钮-删除已授权的信息列-并点击完成"><a href="#5-点击管理按钮-删除已授权的信息列-并点击完成" class="headerlink" title="5.点击管理按钮, 删除已授权的信息列,并点击完成"></a>5.点击管理按钮, 删除已授权的信息列,并点击完成</h4><h4 id="6-再进入到公众号页面-发现需要重新获取授权了"><a href="#6-再进入到公众号页面-发现需要重新获取授权了" class="headerlink" title="6.再进入到公众号页面,发现需要重新获取授权了"></a>6.再进入到公众号页面,发现需要重新获取授权了</h4>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>JS解析地址栏参数a=1&amp;b=2为对象格式</title>
      <link href="/blog/p/2022OParsingParameters/"/>
      <url>/blog/p/2022OParsingParameters/</url>
      
        <content type="html"><![CDATA[<p>JS解析地址栏string参数为object对象格式 将 a&#x3D;1&amp;b&#x3D;2 格式转换为对象格式</p><p>将 “a&#x3D;1&amp;b&#x3D;2” 格式转换为 {a: “1”, b: “2”}</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line"><span class="attr">str2Obj</span>: <span class="keyword">function</span> (<span class="params">str</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">&quot;string&quot;</span> != <span class="keyword">typeof</span> str) <span class="keyword">return</span> str</span><br><span class="line"><span class="keyword">if</span> (str.<span class="title function_">indexOf</span>(<span class="string">&quot;&amp;&quot;</span>) &lt; <span class="number">0</span> &amp;&amp; str.<span class="title function_">indexOf</span>(<span class="string">&quot;=&quot;</span>) &lt; <span class="number">0</span>) <span class="keyword">return</span> &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> newStr = str.<span class="title function_">split</span>(<span class="string">&quot;&amp;&quot;</span>),newOjb = &#123;&#125;</span><br><span class="line">newStr.<span class="title function_">forEach</span>(<span class="function"><span class="params">value</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (value.<span class="title function_">indexOf</span>(<span class="string">&quot;=&quot;</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> newStr1 = value.<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>)</span><br><span class="line">newOjb[newStr1[<span class="number">0</span>]] = newStr1[<span class="number">1</span>]</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span> newOjb</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// test</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">str2Obj</span>(<span class="string">&quot;a=1&amp;b=2&quot;</span>))</span><br><span class="line"><span class="comment">//log:&#123;a: &quot;1&quot;, b: &quot;2&quot;&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP 邮箱邮件发送 腾讯QQ企业邮件发送</title>
      <link href="/blog/p/2022OPHPemailsending/"/>
      <url>/blog/p/2022OPHPemailsending/</url>
      
        <content type="html"><![CDATA[<p>PHP 邮箱邮件发送 腾讯QQ企业邮件发送 单文件版</p><p><a href="https://github.com/harry-1012/PHP_Email_OneFile/tree/main">code:https://github.com/harry-1012/PHP_Email_OneFile&#x2F;tree&#x2F;main</a></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Email</span></span></span><br><span class="line"><span class="class"></span>&#123;   </span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> Type reqData[&quot;title&quot;] 邮件subject 主题</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> Type reqData[&quot;content&quot;] 邮件内容</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> Type reqData[&quot;fromname&quot;] 发件人姓名</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> Type reqData[&quot;receiver&quot;] 收件人邮箱</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> boolean 发送成功会返回true，失败false</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">qqComMailSend</span>(<span class="params"><span class="variable">$reqData</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$reqData</span>)) &#123;</span><br><span class="line">            <span class="variable">$reqData</span> = <span class="variable">$_REQUEST</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$mail</span> = <span class="keyword">new</span> <span class="title class_">Lib_Smtp</span>();</span><br><span class="line">        <span class="variable">$PHPMailer</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;host&#x27;</span> =&gt; <span class="string">&#x27;smtp.exmail.qq.com&#x27;</span>,<span class="comment">//qq邮箱使用smtp.qq.com，qq企业邮箱使用smtp.exmail.qq.com</span></span><br><span class="line">            <span class="string">&#x27;username&#x27;</span> =&gt; <span class="string">&#x27;abc@abc.com&#x27;</span>,<span class="comment">//邮箱登陆账号</span></span><br><span class="line">            <span class="string">&#x27;password&#x27;</span> =&gt; <span class="string">&#x27;123456&#x27;</span>,<span class="comment">//邮箱登陆密码，也有可能是独立密码，就是开启pop3/smtp时的授权码</span></span><br><span class="line">            <span class="string">&#x27;port&#x27;</span> =&gt; <span class="number">465</span>,<span class="comment">//默认25，腾云服务器屏蔽25端口，所以用的465</span></span><br><span class="line">            <span class="string">&#x27;ssl&#x27;</span> =&gt; <span class="literal">true</span>,<span class="comment">//是否开启ssl，用465就得开启</span></span><br><span class="line">            <span class="string">&#x27;from&#x27;</span> =&gt; <span class="string">&#x27;abc@abc.com&#x27;</span><span class="comment">//发件人</span></span><br><span class="line">        );</span><br><span class="line">        <span class="variable">$reqData</span>[<span class="string">&quot;fromname&quot;</span>] = <span class="variable">$reqData</span>[<span class="string">&quot;fromname&quot;</span>]?<span class="variable">$reqData</span>[<span class="string">&quot;fromname&quot;</span>]:<span class="variable">$PHPMailer</span>[<span class="string">&quot;from&quot;</span>];</span><br><span class="line">        <span class="variable">$mail</span>-&gt;<span class="title function_ invoke__">setServer</span>(<span class="variable">$PHPMailer</span>[<span class="string">&quot;host&quot;</span>], <span class="variable">$PHPMailer</span>[<span class="string">&quot;username&quot;</span>], <span class="variable">$PHPMailer</span>[<span class="string">&quot;password&quot;</span>], <span class="variable">$PHPMailer</span>[<span class="string">&quot;port&quot;</span>], <span class="variable">$PHPMailer</span>[<span class="string">&quot;ssl&quot;</span>]); </span><br><span class="line">        <span class="variable">$mail</span>-&gt;<span class="title function_ invoke__">setFrom</span>(<span class="variable">$PHPMailer</span>[<span class="string">&quot;from&quot;</span>]); <span class="comment">//发送者邮箱</span></span><br><span class="line">        <span class="variable">$mail</span>-&gt;<span class="title function_ invoke__">setFromName</span>(<span class="variable">$reqData</span>[<span class="string">&quot;fromname&quot;</span>]); <span class="comment">//发送者姓名</span></span><br><span class="line">        <span class="variable">$mail</span>-&gt;<span class="title function_ invoke__">setReceiver</span>(<span class="variable">$reqData</span>[<span class="string">&quot;receiver&quot;</span>]); <span class="comment">//接收者邮箱</span></span><br><span class="line">        <span class="comment">//$mail-&gt;addAttachment(&quot;&quot;); //Attachment 附件</span></span><br><span class="line">        <span class="variable">$mail</span>-&gt;<span class="title function_ invoke__">setMail</span>(<span class="variable">$reqData</span>[<span class="string">&quot;title&quot;</span>], <span class="variable">$reqData</span>[<span class="string">&quot;content&quot;</span>]); <span class="comment">//标题和内容</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$mail</span>-&gt;<span class="title function_ invoke__">send</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Lib_Smtp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 邮件传输代理用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_userName</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 邮件传输代理密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_password</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 邮件传输代理服务器地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_sendServer</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> int 邮件传输代理服务器端口</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_port</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 发件人</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_from</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 发件人姓名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_from_name</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 收件人</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_to</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 抄送</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_cc</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 秘密抄送</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_bcc</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 主题</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_subject</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 邮件正文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_body</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 附件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_attachment</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> reource socket资源</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_socket</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> reource 是否是安全连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_isSecurity</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string 错误信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_errorMessage</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_debug</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">/*输出调试信息*/</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">debug</span>(<span class="params"><span class="variable">$msg</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;_debug) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$msg</span>, <span class="string">&#x27;&lt;br&gt;&#x27;</span>, <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setDebug</span>(<span class="params"><span class="variable">$val</span> = <span class="literal">true</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_debug = <span class="variable">$val</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置邮件传输代理，如果是可以匿名发送有邮件的服务器，只需传递代理服务器地址就行</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $server 代理服务器的ip或者域名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $username 认证账号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $password 认证密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $port 代理服务器的端口，smtp默认25号端口</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> boolean $isSecurity 到服务器的连接是否为安全连接，默认false</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setServer</span>(<span class="params"><span class="variable">$server</span>, <span class="variable">$username</span> = <span class="string">&quot;&quot;</span>, <span class="variable">$password</span> = <span class="string">&quot;&quot;</span>, <span class="variable">$port</span> = <span class="number">25</span>, <span class="variable">$isSecurity</span> = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_sendServer = <span class="variable">$server</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_port = <span class="variable">$port</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_isSecurity = <span class="variable">$isSecurity</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_userName = <span class="keyword">empty</span>(<span class="variable">$username</span>) ? <span class="string">&quot;&quot;</span> : <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$username</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_password = <span class="keyword">empty</span>(<span class="variable">$password</span>) ? <span class="string">&quot;&quot;</span> : <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$password</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置发件人</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $from 发件人地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setFrom</span>(<span class="params"><span class="variable">$from</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_from = <span class="variable">$from</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置发件人姓名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $from 发件人地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setFromName</span>(<span class="params"><span class="variable">$fromName</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_from_name = <span class="variable">$fromName</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置收件人，多个收件人，调用多次.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $to 收件人地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setReceiver</span>(<span class="params"><span class="variable">$to</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_to)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$this</span>-&gt;_to)) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_to = <span class="keyword">array</span>(<span class="variable language_">$this</span>-&gt;_to);</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_to[] = <span class="variable">$to</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;_to)) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_to[] = <span class="variable">$to</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_to = <span class="variable">$to</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置抄送，多个抄送，调用多次.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $cc 抄送地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setCc</span>(<span class="params"><span class="variable">$cc</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_cc)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$this</span>-&gt;_cc)) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_cc = <span class="keyword">array</span>(<span class="variable language_">$this</span>-&gt;_cc);</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_cc[] = <span class="variable">$cc</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;_cc)) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_cc[] = <span class="variable">$cc</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_cc = <span class="variable">$cc</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置秘密抄送，多个秘密抄送，调用多次</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $bcc 秘密抄送地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setBcc</span>(<span class="params"><span class="variable">$bcc</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_bcc)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$this</span>-&gt;_bcc)) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_bcc = <span class="keyword">array</span>(<span class="variable language_">$this</span>-&gt;_bcc);</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_bcc[] = <span class="variable">$bcc</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;_bcc)) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_bcc[] = <span class="variable">$bcc</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_bcc = <span class="variable">$bcc</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置邮件附件，多个附件，调用多次</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $file 文件地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addAttachment</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$file</span>)) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;file &quot;</span> . <span class="variable">$file</span> . <span class="string">&quot; does not exist.&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_attachment)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$this</span>-&gt;_attachment)) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_attachment = <span class="keyword">array</span>(<span class="variable language_">$this</span>-&gt;_attachment);</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_attachment[] = <span class="variable">$file</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;_attachment)) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_attachment[] = <span class="variable">$file</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_attachment = <span class="variable">$file</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置邮件信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $body 邮件主题</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $subject 邮件主体内容，可以是纯文本，也可是是HTML文本</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setMail</span>(<span class="params"><span class="variable">$subject</span>, <span class="variable">$body</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_subject = <span class="variable">$subject</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_body = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$body</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送邮件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">send</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$command</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getCommand</span>();</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_isSecurity ? <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">socketSecurity</span>() : <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">socket</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$command</span> <span class="keyword">as</span> <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;_isSecurity ? <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">sendCommandSecurity</span>(<span class="variable">$value</span>[<span class="number">0</span>], <span class="variable">$value</span>[<span class="number">1</span>]) : <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">sendCommand</span>(<span class="variable">$value</span>[<span class="number">0</span>], <span class="variable">$value</span>[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$result</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//其实这里也没必要关闭，smtp命令：QUIT发出之后，服务器就关闭了连接，本地的socket资源会自动释放</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_isSecurity ? <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">closeSecutity</span>() : <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回错误信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">error</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_errorMessage)) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_errorMessage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回mail命令</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getCommand</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$separator</span> = <span class="string">&quot;----=_Part_&quot;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;_from . <span class="title function_ invoke__">time</span>()) . <span class="title function_ invoke__">uniqid</span>(); <span class="comment">//分隔符</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">$command</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="keyword">array</span>(<span class="string">&quot;HELO sendmail\r\n&quot;</span>, <span class="number">250</span>)</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;_userName)) &#123;</span><br><span class="line">            <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="string">&quot;AUTH LOGIN\r\n&quot;</span>, <span class="number">334</span>);</span><br><span class="line">            <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="variable language_">$this</span>-&gt;_userName . <span class="string">&quot;\r\n&quot;</span>, <span class="number">334</span>);</span><br><span class="line">            <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="variable language_">$this</span>-&gt;_password . <span class="string">&quot;\r\n&quot;</span>, <span class="number">235</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置发件人</span></span><br><span class="line">        <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="string">&quot;MAIL FROM: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_from . <span class="string">&quot;&gt;\r\n&quot;</span>, <span class="number">250</span>);</span><br><span class="line">        <span class="variable">$fromname_command</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;_from_name))&#123;</span><br><span class="line">            <span class="variable">$fromname_command</span> = <span class="string">&quot; =?utf-8?B?&quot;</span>. <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$this</span>-&gt;_from_name).<span class="string">&quot;?= &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$header</span> = <span class="string">&quot;FROM:&quot;</span>.<span class="variable">$fromname_command</span>.<span class="string">&quot; &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_from . <span class="string">&quot;&gt;\r\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置收件人</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;_to)) &#123;</span><br><span class="line">            <span class="variable">$count</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$this</span>-&gt;_to);</span><br><span class="line">            <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$count</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">                <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="string">&quot;RCPT TO: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_to[<span class="variable">$i</span>] . <span class="string">&quot;&gt;\r\n&quot;</span>, <span class="number">250</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$i</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="variable">$header</span> .= <span class="string">&quot;TO: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_to[<span class="variable">$i</span>] . <span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line">                &#125; <span class="keyword">elseif</span> (<span class="variable">$i</span> + <span class="number">1</span> == <span class="variable">$count</span>) &#123;</span><br><span class="line">                    <span class="variable">$header</span> .= <span class="string">&quot;,&lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_to[<span class="variable">$i</span>] . <span class="string">&quot;&gt;\r\n&quot;</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable">$header</span> .= <span class="string">&quot;,&lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_to[<span class="variable">$i</span>] . <span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="string">&quot;RCPT TO: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_to . <span class="string">&quot;&gt;\r\n&quot;</span>, <span class="number">250</span>);</span><br><span class="line">            <span class="variable">$header</span> .= <span class="string">&quot;TO: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_to . <span class="string">&quot;&gt;\r\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置抄送</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_cc)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;_cc)) &#123;</span><br><span class="line">                <span class="variable">$count</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$this</span>-&gt;_cc);</span><br><span class="line">                <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$count</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">                    <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="string">&quot;RCPT TO: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_cc[<span class="variable">$i</span>] . <span class="string">&quot;&gt;\r\n&quot;</span>, <span class="number">250</span>);</span><br><span class="line">                    <span class="keyword">if</span> (<span class="variable">$i</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="variable">$header</span> .= <span class="string">&quot;CC: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_cc[<span class="variable">$i</span>] . <span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line">                    &#125; <span class="keyword">elseif</span> (<span class="variable">$i</span> + <span class="number">1</span> == <span class="variable">$count</span>) &#123;</span><br><span class="line">                        <span class="variable">$header</span> .= <span class="string">&quot;,&lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_cc[<span class="variable">$i</span>] . <span class="string">&quot;&gt;\r\n&quot;</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="variable">$header</span> .= <span class="string">&quot;,&lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_cc[<span class="variable">$i</span>] . <span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="string">&quot;RCPT TO: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_cc . <span class="string">&quot;&gt;\r\n&quot;</span>, <span class="number">250</span>);</span><br><span class="line">                <span class="variable">$header</span> .= <span class="string">&quot;CC: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_cc . <span class="string">&quot;&gt;\r\n&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置秘密抄送</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_bcc)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;_bcc)) &#123;</span><br><span class="line">                <span class="variable">$count</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$this</span>-&gt;_bcc);</span><br><span class="line">                <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$count</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">                    <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="string">&quot;RCPT TO: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_bcc[<span class="variable">$i</span>] . <span class="string">&quot;&gt;\r\n&quot;</span>, <span class="number">250</span>);</span><br><span class="line">                    <span class="keyword">if</span> (<span class="variable">$i</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="variable">$header</span> .= <span class="string">&quot;BCC: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_bcc[<span class="variable">$i</span>] . <span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line">                    &#125; <span class="keyword">elseif</span> (<span class="variable">$i</span> + <span class="number">1</span> == <span class="variable">$count</span>) &#123;</span><br><span class="line">                        <span class="variable">$header</span> .= <span class="string">&quot;,&lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_bcc[<span class="variable">$i</span>] . <span class="string">&quot;&gt;\r\n&quot;</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="variable">$header</span> .= <span class="string">&quot;,&lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_bcc[<span class="variable">$i</span>] . <span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="string">&quot;RCPT TO: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_bcc . <span class="string">&quot;&gt;\r\n&quot;</span>, <span class="number">250</span>);</span><br><span class="line">                <span class="variable">$header</span> .= <span class="string">&quot;BCC: &lt;&quot;</span> . <span class="variable language_">$this</span>-&gt;_bcc . <span class="string">&quot;&gt;\r\n&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//主题</span></span><br><span class="line">        <span class="variable">$header</span> .= <span class="string">&quot;Subject: &quot;</span> . <span class="variable language_">$this</span>-&gt;_subject . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_attachment)) &#123;</span><br><span class="line">            <span class="comment">//含有附件的邮件头需要声明成这个</span></span><br><span class="line">            <span class="variable">$header</span> .= <span class="string">&quot;Content-Type: multipart/mixed;\r\n&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="comment">//邮件体含有图片资源的需要声明成这个</span></span><br><span class="line">            <span class="variable">$header</span> .= <span class="string">&quot;Content-Type: multipart/related;\r\n&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//html或者纯文本的邮件声明成这个</span></span><br><span class="line">            <span class="variable">$header</span> .= <span class="string">&quot;Content-Type: multipart/alternative;\r\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//邮件头分隔符</span></span><br><span class="line">        <span class="variable">$header</span> .= <span class="string">&quot;\t&quot;</span> . <span class="string">&#x27;boundary=&quot;&#x27;</span> . <span class="variable">$separator</span> . <span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">        <span class="variable">$header</span> .= <span class="string">&quot;\r\nMIME-Version: 1.0\r\n&quot;</span>;</span><br><span class="line">        <span class="variable">$header</span> .= <span class="string">&quot;\r\n--&quot;</span> . <span class="variable">$separator</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">        <span class="variable">$header</span> .= <span class="string">&quot;Content-Type:text/html; charset=utf-8\r\n&quot;</span>;</span><br><span class="line">        <span class="variable">$header</span> .= <span class="string">&quot;Content-Transfer-Encoding: base64\r\n\r\n&quot;</span>;</span><br><span class="line">        <span class="variable">$header</span> .= <span class="variable language_">$this</span>-&gt;_body . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">        <span class="variable">$header</span> .= <span class="string">&quot;--&quot;</span> . <span class="variable">$separator</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//加入附件</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_attachment) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;_attachment)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;_attachment)) &#123;</span><br><span class="line">                <span class="variable">$count</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$this</span>-&gt;_attachment);</span><br><span class="line">                <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$count</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">                    <span class="variable">$header</span> .= <span class="string">&quot;\r\n--&quot;</span> . <span class="variable">$separator</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">                    <span class="variable">$header</span> .= <span class="string">&quot;Content-Type: &quot;</span> . <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getMIMEType</span>(<span class="variable">$this</span>-&gt;_attachment[<span class="variable">$i</span>]) . <span class="string">&#x27;; name=&quot;&#x27;</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$this</span>-&gt;_attachment[<span class="variable">$i</span>]) . <span class="string">&#x27;&quot;&#x27;</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">                    <span class="variable">$header</span> .= <span class="string">&quot;Content-Transfer-Encoding: base64\r\n&quot;</span>;</span><br><span class="line">                    <span class="variable">$header</span> .= <span class="string">&#x27;Content-Disposition: attachment; filename=&quot;&#x27;</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$this</span>-&gt;_attachment[<span class="variable">$i</span>]) . <span class="string">&#x27;&quot;&#x27;</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">                    <span class="variable">$header</span> .= <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">                    <span class="variable">$header</span> .= <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">readFile</span>(<span class="variable">$this</span>-&gt;_attachment[<span class="variable">$i</span>]);</span><br><span class="line">                    <span class="variable">$header</span> .= <span class="string">&quot;\r\n--&quot;</span> . <span class="variable">$separator</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$header</span> .= <span class="string">&quot;\r\n--&quot;</span> . <span class="variable">$separator</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">                <span class="variable">$header</span> .= <span class="string">&quot;Content-Type: &quot;</span> . <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getMIMEType</span>(<span class="variable">$this</span>-&gt;_attachment) . <span class="string">&#x27;; name=&quot;&#x27;</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$this</span>-&gt;_attachment) . <span class="string">&#x27;&quot;&#x27;</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">                <span class="variable">$header</span> .= <span class="string">&quot;Content-Transfer-Encoding: base64\r\n&quot;</span>;</span><br><span class="line">                <span class="variable">$header</span> .= <span class="string">&#x27;Content-Disposition: attachment; filename=&quot;&#x27;</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$this</span>-&gt;_attachment) . <span class="string">&#x27;&quot;&#x27;</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">                <span class="variable">$header</span> .= <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">                <span class="variable">$header</span> .= <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">readFile</span>(<span class="variable">$this</span>-&gt;_attachment);</span><br><span class="line">                <span class="variable">$header</span> .= <span class="string">&quot;\r\n--&quot;</span> . <span class="variable">$separator</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//结束邮件数据发送</span></span><br><span class="line">        <span class="variable">$header</span> .= <span class="string">&quot;\r\n.\r\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="string">&quot;DATA\r\n&quot;</span>, <span class="number">354</span>);</span><br><span class="line">        <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="variable">$header</span>, <span class="number">250</span>);</span><br><span class="line">        <span class="variable">$command</span>[] = <span class="keyword">array</span>(<span class="string">&quot;QUIT\r\n&quot;</span>, <span class="number">221</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$command</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送命令</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $command 发送到服务器的smtp命令</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $code 期望服务器返回的响应吗</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">sendCommand</span>(<span class="params"><span class="variable">$command</span>, <span class="variable">$code</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//debug(&#x27;Send command:&#x27; . $command . &#x27;,expected code:&#x27; . $code );</span></span><br><span class="line">        <span class="comment">//发送命令给服务器</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">socket_write</span>(<span class="variable">$this</span>-&gt;_socket, <span class="variable">$command</span>, <span class="title function_ invoke__">strlen</span>(<span class="variable">$command</span>))) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//当邮件内容分多次发送时，没有$code，服务器没有返回</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$code</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//读取服务器返回</span></span><br><span class="line">                <span class="variable">$data</span> = <span class="title function_ invoke__">trim</span>(<span class="title function_ invoke__">socket_read</span>(<span class="variable">$this</span>-&gt;_socket, <span class="number">1024</span>));</span><br><span class="line">                <span class="comment">//debug( &#x27;response:&#x27; . $data);</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$data</span>) &#123;</span><br><span class="line">                    <span class="variable">$pattern</span> = <span class="string">&quot;/^&quot;</span> . <span class="variable">$code</span> . <span class="string">&quot;/&quot;</span>;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="variable">$pattern</span>, <span class="variable">$data</span>)) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;Error:&quot;</span> . <span class="variable">$data</span> . <span class="string">&quot;|**| command:&quot;</span>;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;Error:&quot;</span> . <span class="title function_ invoke__">socket_strerror</span>(<span class="title function_ invoke__">socket_last_error</span>());</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;Error:&quot;</span> . <span class="title function_ invoke__">socket_strerror</span>(<span class="title function_ invoke__">socket_last_error</span>());</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;Error:&quot;</span> . <span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getMessage</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送命令</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $command 发送到服务器的smtp命令</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $code 期望服务器返回的响应吗</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">sendCommandSecurity</span>(<span class="params"><span class="variable">$command</span>, <span class="variable">$code</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//debug(&#x27;Send command:&#x27; . $command . &#x27;,expected code:&#x27; . $code );</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">fwrite</span>(<span class="variable">$this</span>-&gt;_socket, <span class="variable">$command</span>)) &#123;</span><br><span class="line">                <span class="comment">//当邮件内容分多次发送时，没有$code，服务器没有返回</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$code</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//读取服务器返回</span></span><br><span class="line">                <span class="variable">$data</span> = <span class="title function_ invoke__">trim</span>(<span class="title function_ invoke__">fread</span>(<span class="variable">$this</span>-&gt;_socket, <span class="number">1024</span>));</span><br><span class="line">                <span class="comment">//debug( &#x27;response:&#x27; . $data );</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$data</span>) &#123;</span><br><span class="line">                    <span class="variable">$pattern</span> = <span class="string">&quot;/^&quot;</span> . <span class="variable">$code</span> . <span class="string">&quot;/&quot;</span>;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="variable">$pattern</span>, <span class="variable">$data</span>)) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;Error:&quot;</span> . <span class="variable">$data</span> . <span class="string">&quot;|**| command:&quot;</span>;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;Error: &quot;</span> . <span class="variable">$command</span> . <span class="string">&quot; send failed&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;Error:&quot;</span> . <span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getMessage</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 读取附件文件内容，返回base64编码后的文件内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $file 文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">readFile</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$file</span>)) &#123;</span><br><span class="line">            <span class="variable">$file_obj</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$file</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$file_obj</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;file &quot;</span> . <span class="variable">$file</span> . <span class="string">&quot; dose not exist&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取附件MIME类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $file 文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getMIMEType</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$file</span>)) &#123;</span><br><span class="line">            <span class="variable">$mime</span> = <span class="title function_ invoke__">mime_content_type</span>(<span class="variable">$file</span>);</span><br><span class="line">            <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/gif|jpg|png|jpeg/&quot;</span>, <span class="variable">$mime</span>)) &#123;</span><br><span class="line">                <span class="variable">$mime</span> = <span class="string">&quot;application/octet-stream&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$mime</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 建立到服务器的网络连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">socket</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//创建socket资源</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_socket = <span class="title function_ invoke__">socket_create</span>(AF_INET, SOCK_STREAM, <span class="title function_ invoke__">getprotobyname</span>(<span class="string">&#x27;tcp&#x27;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;_socket) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="title function_ invoke__">socket_strerror</span>(<span class="title function_ invoke__">socket_last_error</span>());</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="title function_ invoke__">socket_set_block</span>(<span class="variable">$this</span>-&gt;_socket); <span class="comment">//设置阻塞模式</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//连接服务器</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">socket_connect</span>(<span class="variable">$this</span>-&gt;_socket, <span class="variable">$this</span>-&gt;_sendServer, <span class="variable">$this</span>-&gt;_port)) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="title function_ invoke__">socket_strerror</span>(<span class="title function_ invoke__">socket_last_error</span>());</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$str</span> = <span class="title function_ invoke__">socket_read</span>(<span class="variable">$this</span>-&gt;_socket, <span class="number">1024</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">strpos</span>(<span class="variable">$str</span>, <span class="string">&quot;220&quot;</span>)) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="variable">$str</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 建立到服务器的SSL网络连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">socketSecurity</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$remoteAddr</span> = <span class="string">&quot;tcp://&quot;</span> . <span class="variable language_">$this</span>-&gt;_sendServer . <span class="string">&quot;:&quot;</span> . <span class="variable language_">$this</span>-&gt;_port;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_socket = <span class="title function_ invoke__">stream_socket_client</span>(<span class="variable">$remoteAddr</span>, <span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="number">30</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;_socket) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="variable">$errstr</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置加密连接，默认是ssl，如果需要tls连接，可以查看php手册stream_socket_enable_crypto函数的解释</span></span><br><span class="line">        <span class="title function_ invoke__">stream_socket_enable_crypto</span>(<span class="variable">$this</span>-&gt;_socket, <span class="literal">true</span>, STREAM_CRYPTO_METHOD_SSLv23_CLIENT);</span><br><span class="line"></span><br><span class="line">        <span class="title function_ invoke__">stream_set_blocking</span>(<span class="variable">$this</span>-&gt;_socket, <span class="number">1</span>); <span class="comment">//设置阻塞模式</span></span><br><span class="line">        <span class="variable">$str</span> = <span class="title function_ invoke__">fread</span>(<span class="variable">$this</span>-&gt;_socket, <span class="number">1024</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">strpos</span>(<span class="variable">$str</span>, <span class="string">&quot;220&quot;</span>)) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="variable">$str</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭socket</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_socket) &amp;&amp; <span class="title function_ invoke__">is_object</span>(<span class="variable">$this</span>-&gt;_socket)) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_socket-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;No resource can to be close&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭安全socket</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> private</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">closeSecutity</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_socket) &amp;&amp; <span class="title function_ invoke__">is_object</span>(<span class="variable">$this</span>-&gt;_socket)) &#123;</span><br><span class="line">            <span class="title function_ invoke__">stream_socket_shutdown</span>(<span class="variable">$this</span>-&gt;_socket, STREAM_SHUT_WR);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_errorMessage = <span class="string">&quot;No resource can to be close&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP批量模糊清空Redis redis-&gt;scan key*</title>
      <link href="/blog/p/2022OPHPBatchFuzzy/"/>
      <url>/blog/p/2022OPHPBatchFuzzy/</url>
      
        <content type="html"><![CDATA[<p>PHP批量模糊清空Redis</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$redis</span> = <span class="keyword">new</span> <span class="title class_">\Redis</span>();</span><br><span class="line"><span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">connect</span>(<span class="string">&#x27;127.0.0.1&#x27;</span>,<span class="number">6379</span>);  </span><br><span class="line"><span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">setOption</span>(<span class="title class_">\Redis</span>::<span class="variable constant_">OPT_SCAN</span>, <span class="title class_">\Redis</span>::<span class="variable constant_">SCAN_RETRY</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$arr_keys</span> = <span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">scan</span>(<span class="literal">NULL</span>, <span class="string">&quot;key_*&quot;</span>, <span class="number">5</span>)) &#123;</span><br><span class="line">    <span class="title function_ invoke__">call_user_func_array</span>([<span class="variable">$redis</span>, <span class="string">&#x27;del&#x27;</span>], <span class="variable">$arr_keys</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">var_export</span>(<span class="variable">$arr_keys</span>, <span class="literal">true</span>) . PHP_EOL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>go利用nginx实现热重载热更新平滑重启 golang不停服更新 go热升级</title>
      <link href="/blog/p/2022Implementing/"/>
      <url>/blog/p/2022Implementing/</url>
      
        <content type="html"><![CDATA[<p>平滑重启(热重启)是指WebServer在重启的时候不会中断已有请求的执行&#x2F;该特性在不同的项目版本发布的时候特别有用,例如，当需要先后发布两个版本：A、B，那么在A执行的过程当中,将服务平滑重启至B版本,具体做法如下</p><p>利用nginx的反向代理转发go服务端口,例如服务apiv1端口是1001,服务apiv2端口是1002, 现有nginx.conf配置如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    # golang api</span><br><span class="line">    location /golangapi/ &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:1001/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假设现在我们需要将服务平滑重启至apiv2:1002,则只需要将nginx配置改为:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name abc.com;</span><br><span class="line">    # golang api</span><br><span class="line">    location /golangapi/ &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:1002/;#这里更改端口号</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存nginx配置后,执行&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -s reload命令重载配置,即可实现平滑重启</p><p>在reload过程中,nginx会在保持原有apiv1请求的前提下实现平滑重启,新的[abc.com&#x2F;golangapi&#x2F;]请求将指向apiv2服务</p><p>如果在reload过程中,打开的连接数量过多,请求时间过长,可以通过修改nginx参数’worker_shutdown_timeout’来设置过期时间来关闭reload过程中仍然打开的连接.</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>gorm Raw查询报错 sql converting argument $1 type unsupported type struct {}, a struct; invalid value, should be pointer to struct or slice; invalid value, should be pointer to struct or slice</title>
      <link href="/blog/p/2022sqlconverting/"/>
      <url>/blog/p/2022sqlconverting/</url>
      
        <content type="html"><![CDATA[<p>golang gorm 查询时提示如下,即使sqlParam已经初始化过也一直提示无效值</p><h4 id="报错内容"><a href="#报错内容" class="headerlink" title="报错内容"></a>报错内容</h4><p>sql: converting argument $1 type: unsupported type struct {}, a struct; invalid value, should be pointer to struct or slice; invalid value, should be pointer to struct or slice</p><h4 id="原因"><a href="#原因" class="headerlink" title="原因:"></a>原因:</h4><p>发起查询时,Raw方法第二个参数不能为空,并且需要在Raw方法的第一个sql语句中有调用@第二个参数中的字段</p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案:"></a>解决方案:</h4><p>增加 Placeholder , 初始化值为1,并在sql语句中调用 @Placeholder , 或者根据请求情况,增加判断是否要传入Raw方法的第二个参数</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">sql := <span class="string">&quot;SELECT * FROM test WHERE @Placeholder &quot;</span> <span class="comment">//SELECT * FROM test WHERE 1</span></span><br><span class="line"><span class="keyword">var</span> sqlParam <span class="keyword">struct</span> &#123;</span><br><span class="line">Applyno       <span class="type">string</span></span><br><span class="line">Status        *<span class="type">int</span></span><br><span class="line">Placeholder   <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line">sqlParam.Placeholder = <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> info.Applyno != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">sql += <span class="string">&quot; AND applyno = @Applyno &quot;</span></span><br><span class="line">sqlParam.Applyno = info.Applyno</span><br><span class="line">&#125;</span><br><span class="line">dbRawErr := db.Raw(sql, sqlParam).Scan(&amp;dataList).Error</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>go goroutine chan 并发/通道 异步处理微信订单分账</title>
      <link href="/blog/p/2022ConcurrentChannel/"/>
      <url>/blog/p/2022ConcurrentChannel/</url>
      
        <content type="html"><![CDATA[<p>最近在开发微信服务商,申请分账需要对每个订单单独发起,于是用到了golang的协程</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>, runtime.NumCPU())</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(wechatOrderList); i++ &#123;</span><br><span class="line">        <span class="keyword">go</span> modifyWxOrderProfit(&amp;wechatOrderList[i], ch)</span><br><span class="line">        ch &lt;- i</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">close</span>(ch)</span><br><span class="line"><span class="comment">// 处理分账订单</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">modifyWxOrderProfit</span><span class="params">(wechatOrder *order.WechatOrder, ch <span class="keyword">chan</span> <span class="type">int</span>)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 发起微信订单分账请求</span></span><br><span class="line">        <span class="comment">// client.POST()...</span></span><br><span class="line">        <span class="keyword">for</span> v := <span class="keyword">range</span> ch &#123;</span><br><span class="line">                fmt.Println(<span class="string">&quot;当前异步处理的是第&quot;</span>,v,<span class="string">&quot;个订单&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python批量替换文件名,Python批量修改文件名前缀</title>
      <link href="/blog/p/2022OPHPBatchRename/"/>
      <url>/blog/p/2022OPHPBatchRename/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment">#设定文件路径</span></span><br><span class="line">path=<span class="string">&quot;F:\\需要修改的文件路径\\&quot;</span></span><br><span class="line"><span class="comment">#遍历文件</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> os.listdir(path):</span><br><span class="line">    <span class="keyword">if</span> os.path.isfile(os.path.join(path,file))==<span class="literal">True</span>:</span><br><span class="line"><span class="comment">#设置新文件名</span></span><br><span class="line">        new_name=file.replace(<span class="string">&quot;要替换的老的文件名内容&quot;</span>,<span class="string">&quot;新的文件名内容&quot;</span>)</span><br><span class="line"><span class="comment">#重命名文件</span></span><br><span class="line">        os.rename(os.path.join(path,file),os.path.join(path,new_name))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;complete!&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql5.7数据库降级到5.6版本</title>
      <link href="/blog/p/2022OMySQL57/"/>
      <url>/blog/p/2022OMySQL57/</url>
      
        <content type="html"><![CDATA[<p>从MySQL 5.7版本的数据库导出sql文件后,导入到MySQL 5.6版本的数据库中报如下错误</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Specified key was too long; max key length is 767 bytes</span><br></pre></td></tr></table></figure><p>错误提示索引字段长度首先,最大长度767 bytes</p><p>在*.sql文件中增加如下设置:</p><p>首先设置MySQL的全局参数innodb_large_prefix&#x3D;ON，将InnoDB表的索引长度上限扩大到3072个字节</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> innodb_large_prefix <span class="operator">=</span> <span class="keyword">ON</span>;</span><br></pre></td></tr></table></figure><p>指定innodb文件格式为Barracuda</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> innodb_file_format<span class="operator">=</span>Barracuda;</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> innodb_file_format_max<span class="operator">=</span>Barracuda;</span><br></pre></td></tr></table></figure><p>最后成功导入</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>隐藏3D对象 快捷栏 隐藏 Win10 中的3D对象、文档、音乐、图片、视频、下载、桌面7个文件夹</title>
      <link href="/blog/p/2022Hide3DObjectShortcutBarHide/"/>
      <url>/blog/p/2022Hide3DObjectShortcutBarHide/</url>
      
        <content type="html"><![CDATA[<p>Github - <a href="https://github.com/harry-1012/OSS/blob/master/Download/REG/Hide%203D%20object.reg">https://github.com/harry-1012/OSS/blob/master/Download/REG/Hide%203D%20object.reg</a><br>Download - <a href="https://raw.githubusercontent.com/haoleiqin/OSS/master/Download/REG/Hide%203D%20object.reg">https://raw.githubusercontent.com/haoleiqin/OSS/master/Download/REG/Hide%203D%20object.reg</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">; 删除我的电脑/此电脑里面的 3D对象</span><br><span class="line">[-HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\&#123;0DB7E03F-FC29-4DC6-9020-FF41B59E513A&#125;]</span><br><span class="line">[-HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\&#123;0DB7E03F-FC29-4DC6-9020-FF41B59E513A&#125;]</span><br><span class="line"></span><br><span class="line">; 隐藏另存为里面的 3D对象</span><br><span class="line">[-HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\&#123;31C0DD25-9439-4F12-BF41-7FF4EDA38722&#125;\PropertyBag]</span><br><span class="line">&quot;ThisPCPolicy&quot;=&quot;Hide&quot;</span><br><span class="line"></span><br><span class="line">;隐藏我的电脑/此电脑里面的 图片</span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\&#123;0ddd015d-b06c-45d5-8c4c-f59713854639&#125;\PropertyBag]</span><br><span class="line">&quot;ThisPCPolicy&quot;=&quot;Hide&quot;</span><br><span class="line"></span><br><span class="line">; 隐藏另存为里面的 图片</span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\&#123;0ddd015d-b06c-45d5-8c4c-f59713854639&#125;\PropertyBag]</span><br><span class="line">&quot;ThisPCPolicy&quot;=&quot;Hide&quot;</span><br><span class="line"></span><br><span class="line">; 视频</span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\&#123;35286a68-3c57-41a1-bbb1-0eae73d76c95&#125;\PropertyBag]</span><br><span class="line">&quot;ThisPCPolicy&quot;=&quot;Hide&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\&#123;35286a68-3c57-41a1-bbb1-0eae73d76c95&#125;\PropertyBag]</span><br><span class="line">&quot;ThisPCPolicy&quot;=&quot;Hide&quot;</span><br><span class="line"></span><br><span class="line">; 下载</span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\&#123;7d83ee9b-2244-4e70-b1f5-5393042af1e4&#125;\PropertyBag]</span><br><span class="line">&quot;ThisPCPolicy&quot;=&quot;Hide&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\&#123;7d83ee9b-2244-4e70-b1f5-5393042af1e4&#125;\PropertyBag]</span><br><span class="line">&quot;ThisPCPolicy&quot;=&quot;Hide&quot;</span><br><span class="line"></span><br><span class="line">; 音乐</span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\&#123;a0c69a99-21c8-4671-8703-7934162fcf1d&#125;\PropertyBag]</span><br><span class="line">&quot;ThisPCPolicy&quot;=&quot;Hide&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\&#123;a0c69a99-21c8-4671-8703-7934162fcf1d&#125;\PropertyBag]</span><br><span class="line">&quot;ThisPCPolicy&quot;=&quot;Hide&quot;</span><br><span class="line"></span><br><span class="line">; 桌面</span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\&#123;B4BFCC3A-DB2C-424C-B029-7FE99A87C641&#125;\PropertyBag]</span><br><span class="line">&quot;ThisPCPolicy&quot;=&quot;Hide&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\&#123;B4BFCC3A-DB2C-424C-B029-7FE99A87C641&#125;\PropertyBag]</span><br><span class="line">&quot;ThisPCPolicy&quot;=&quot;Hide&quot;</span><br><span class="line"></span><br><span class="line">; 文档</span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\&#123;f42ee2d3-909f-4907-8871-4c22fc0bf756&#125;\PropertyBag]</span><br><span class="line">&quot;ThisPCPolicy&quot;=&quot;Hide&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\&#123;f42ee2d3-909f-4907-8871-4c22fc0bf756&#125;\PropertyBag]</span><br><span class="line">&quot;ThisPCPolicy&quot;=&quot;Hide&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>emoji表情在线预览 可复制非图片</title>
      <link href="/blog/p/2023Emoji/"/>
      <url>/blog/p/2023Emoji/</url>
      
        <content type="html"><![CDATA[<p>超1000个emoji符号表情大全，包括：表情 人物 手势 日常 手机 公共 动物 植物 自然 饮食 文体 恐怖 旅游 物品 标志 生肖 星座 钟表 心形 花草 树叶 月亮 水果 钱币 交通 建筑 办公 箭头 扑克 天气</p><h1 id="表情-emoji"><a href="#表情-emoji" class="headerlink" title="表情 emoji"></a>表情 emoji</h1><p><span style="font-size:xx-large"> 😃😄😁😆😅🤣😂🙂🙃😉😊😇🥰😍🤩😘😗😚😙😋😛😜🤪😝🤑🤗🤭🤫🤔🤐🤨😐😑😶😏😒🙄😬🤥😌😔😪🤤😴😷🤒🤕🤢🤮🤧🥵🥶🥴😵🤯🤠🥳😎🤓🧐😕😟🙁☹️😮😯😲😳🥺😦😧😨😰😥😢😭😱😖😣😞😓😩😫🥱😤😡😠🤬</span></p><h1 id="人物-emoji"><a href="#人物-emoji" class="headerlink" title="人物 emoji"></a>人物 emoji</h1><p><span style="font-size:xx-large">  👶🧒👦👧🧑👱👨🧔👨‍🦰👨‍🦱👨‍🦳👨‍🦲👩👩‍🦰🧑‍🦰👩‍🦱🧑‍🦱👩‍🦳🧑‍🦳👩‍🦲🧑‍🦲👱‍♀️👱‍♂️🧓👴👵🙍🙍‍♂️🙍‍♀️🙎🙎‍♂️🙎‍♀️🙅🙅‍♂️🙅‍♀️🙆🙆‍♂️🙆‍♀️💁💁‍♂️💁‍♀️🙋🙋‍♂️🙋‍♀️🧏🧏‍♂️🧏‍♀️🙇🙇‍♂️🙇‍♀️🤦🤦‍♂️🤦‍♀️🤷🤷‍♂️🤷‍♀️🧑‍⚕️👨‍⚕️👩‍⚕️🧑‍🎓👨‍🎓👩‍🎓🧑‍🏫👨‍🏫👩‍🏫🧑‍⚖️👨‍⚖️👩‍⚖️🧑‍🌾👨‍🌾👩‍🌾🧑‍🍳👨‍🍳👩‍🍳🧑‍🔧👨‍🔧👩‍🔧🧑‍🏭👨‍🏭👩‍🏭🧑‍💼👨‍💼👩‍💼🧑‍🔬👨‍🔬👩‍🔬🧑‍💻👨‍💻👩‍💻🧑‍🎤👨‍🎤👩‍🎤🧑‍🎨👨‍🎨👩‍🎨🧑‍✈️👨‍✈️👩‍✈️🧑‍🚀👨‍🚀👩‍🚀🧑‍🚒👨‍🚒👩‍🚒👮👮‍♂️👮‍♀️🕵️🕵️‍♂️🕵️‍♀️💂💂‍♂️💂‍♀️🥷👷👷‍♂️👷‍♀️🤴👸👳👳‍♂️👳‍♀️👲🧕🤵🤵‍♂️🤵‍♀️👰👰‍♂️👰‍♀️🤰🤱👩‍🍼👨‍🍼🧑‍🍼👼🎅🤶🧑‍🎄🦸🦸‍♂️🦸‍♀️🦹🦹‍♂️🦹‍♀️🧙🧙‍♂️🧙‍♀️🧚🧚‍♂️🧚‍♀️🧛🧛‍♂️🧛‍♀️🧜🧜‍♂️🧜‍♀️🧝🧝‍♂️🧝‍♀️🧞🧞‍♂️🧞‍♀️🧟🧟‍♂️🧟‍♀️💆💆‍♂️💆‍♀️💇💇‍♂️💇‍♀️🚶🚶‍♂️🚶‍♀️🧍🧍‍♂️🧍‍♀️🧎🧎‍♂️🧎‍♀️🧑‍🦯👨‍🦯👩‍🦯🧑‍🦼👨‍🦼👩‍🦼🧑‍🦽👨‍🦽👩‍🦽🏃🏃‍♂️🏃‍♀️💃🕺🕴️👯👯‍♂️👯‍♀️🧖🧖‍♂️🧖‍♀️🧘🧑‍🤝‍🧑👭👫👬💏👩‍❤️‍💋‍👨👨‍❤️‍💋‍👨👩‍❤️‍💋‍👩💑👩‍❤️‍👨👨‍❤️‍👨👩‍❤️‍👩👪👨‍👩‍👦👨‍👩‍👧👨‍👩‍👧‍👦👨‍👩‍👦‍👦👨‍👩‍👧‍👧👨‍👨‍👦👨‍👨‍👧👨‍👨‍👧‍👦👨‍👨‍👦‍👦👨‍👨‍👧‍👧👩‍👩‍👦👩‍👩‍👧👩‍👩‍👧‍👦👩‍👩‍👦‍👦👩‍👩‍👧‍👧👨‍👦👨‍👦‍👦👨‍👧👨‍👧‍👦👨‍👧‍👧👩‍👦👩‍👦‍👦👩‍👧👩‍👧‍👦👩‍👧‍👧🗣️👤👥</span></p><h1 id="手势-emoji"><a href="#手势-emoji" class="headerlink" title="手势 emoji"></a>手势 emoji</h1><p><span style="font-size:xx-large">  👋🤚🖐️✋🖖👌🤌🤏✌️🤞🤟🤘🤙👈👉👆🖕👇☝️👍👎✊👊🤛🤜👏🙌👐🤲🤝🙏✍️💅🤳💪</span></p><h1 id="日常-emoji"><a href="#日常-emoji" class="headerlink" title="日常 emoji"></a>日常 emoji</h1><p>️️️️<span style="font-size:xx-large">  👣👀👁️👄💋👂🦻👃👅🧠🫀🫁🦷🦴💪🦾🦿🦵🦶👓🕶️🥽🥼🦺👔👕👖🧣🧤🧥🧦👗👘🥻🩱🩲🩳👙👚👛👜👝🎒🩴👞👟🥾🥿👠👡🩰👢👑👒🎩🎓🧢🪖⛑️💄💅💍💼🌂☂️💈🛀🛌💥💫💦💨</span><br></span></p><h1 id="手机-emoji"><a href="#手机-emoji" class="headerlink" title="手机 emoji"></a>手机 emoji</h1><p><span style="font-size:xx-large">  📱📲📶📳📴☎📞📟📠🤳</span></p><h1 id="公共-emoji"><a href="#公共-emoji" class="headerlink" title="公共 emoji"></a>公共 emoji</h1><p><span style="font-size:xx-large">  ♻🏧🚮🚰♿🚹🚺🚻🚼🚾⚠🚸⛔🚫🚳🚭🚯🚱🚷🔞💈</span></p><h1 id="动物-emoji"><a href="#动物-emoji" class="headerlink" title="动物 emoji"></a>动物 emoji</h1><p><span style="font-size:xx-large">  🙈🙉🙊💥💫💦💨🐵🐒🦍🦧🐶🐕🦮🐕‍🦺🐩🐺🦊🦝🐱🐈🐈‍⬛🦁🐯🐅🐆🐴🐎🦄🦓🦌🦬🐮🐂🐃🐄🐷🐖🐗🐽🐏🐑🐐🐪🐫🦙🦒🐘🦏🦛🐭🐁🐀🐹🐰🐇🐿️🦫🦔🦇🐻🐻‍❄️🐨🐼🦥🦦🦨🦘🦡🐾🦃🐔🐓🐣🐤🐥🐦🐧🕊️🦅🦆🦢🦉🦩🦚🦜🐸🐊🐢🦎🐍🐲🐉🦕🦖🐳🐋🐬🦭🐟🐠🐡🦈🐙🐚🐌🦋🐛🐜🐝🪲🐞🦗🪳🕷️🕸️🦂🦟🦠🦀🦞🦐🦑</span></p><h1 id="植物-emoji"><a href="#植物-emoji" class="headerlink" title="植物 emoji"></a>植物 emoji</h1><p>️️<span style="font-size:xx-large">  💐🌸💮🏵️🌹🥀🌺🌻🌼🌷🌱🌲🌳🌴🌵🌾🌿☘️🍀🍁🍂🍃</span></p><h1 id="自然-emoji"><a href="#自然-emoji" class="headerlink" title="自然 emoji"></a>自然 emoji</h1><p><span style="font-size:xx-large">  🌍🌎🌏🌐🪨🌑🌒🌓🌔🌕🌖🌗🌘🌙🌚🌛🌜☀️🌝🌞⭐🌟🌠☁️⛅⛈️🌤️🌥️🌦️🌧️🌨️🌩️🌪️🌫️🌬️🌈☂️☔⚡❄️☃️⛄☄️🔥💧🌊</span></p><h1 id="饮食-emoji"><a href="#饮食-emoji" class="headerlink" title="饮食 emoji"></a>饮食 emoji</h1><p>️<span style="font-size:xx-large">  🍇🍈🍉🍊🍋🍌🍍🥭🍎🍏🍐🍑🍒🍓🥝🍅🥥🥑🍆🥔🥕🌽🌶️🥒🥬🥦🧄🧅🍄🥜🌰🍞🥐🥖🫓🥨🥯🥞🧇🧀🍖🍗🥩🥓🍔🍟🍕🌭🥪🌮🌯🥙🧆🥚🍳🥘🍲🥣🥗🍿🧈🧂🥫🍱🍘🍙🍚🍛🍜🍝🍠🍢🍣🍤🍥🥮🍡🥟🥠🥡🦪🍦🍧🍨🍩🍪🎂🍰🧁🥧🍫🍬🍭🍮🍯🍼🥛☕🫖🍵🍶🍾🍷🍸🍹🍺🍻🥂🥃🥤🧋🧃🧉🧊🥢🍽️🍴🥄</span></p><h1 id="文体-emoji"><a href="#文体-emoji" class="headerlink" title="文体 emoji"></a>文体 emoji</h1><p><span style="font-size:xx-large">  🧗🧗‍♂️🧗‍♀️🤺🏇⛷️🏂🏌️🏌️‍♂️🏌️‍♀️🏄🏄‍♂️🏄‍♀️🚣🚣‍♂️🚣‍♀️🏊🏊‍♂️🏊‍♀️⛹️⛹️‍♂️⛹️‍♀️🏋️🏋️‍♂️🏋️‍♀️🚴🚴‍♂️🚴‍♀️🚵🚵‍♂️🚵‍♀️🤸🤸‍♂️🤸‍♀️🤼🤼‍♂️🤼‍♀️🤽🤽‍♂️🤽‍♀️🤾🤾‍♂️🤾‍♀️🤹🤹‍♂️🤹‍♀️🧘🧘‍♂️🧘‍♀️🎪🛹🛼🛶🎗️🎟️🎫🎖️🏆🏅🥇🥈🥉⚽⚾🥎🏀🏐🏈🏉🎾🥏🎳🏏🏑🏒🥍🏓🏸🥊🥋🥅⛳⛸️🎣🎽🎿🛷🥌🎯🎱🎮🎰🎲🧩♟️🎭🎨🧵🧶🎼🎤🎧🎷🪗🎸🎹🎺🎻🥁🪘🎬🏹</span></p><h1 id="恐怖-emoji"><a href="#恐怖-emoji" class="headerlink" title="恐怖 emoji"></a>恐怖 emoji</h1><p><span style="font-size:xx-large">  😈👿👹👺💀☠👻👽👾💣</span></p><h1 id="旅游-emoji"><a href="#旅游-emoji" class="headerlink" title="旅游 emoji"></a>旅游 emoji</h1><p><span style="font-size:xx-large">  👣🎠🎡🎢🚣🏔️⛰️🌋🗻🏕️🏖️🏜️🏝️🏞️🏟️🏛️🏗️🛖🏘️🏚️🏠🏡🏢🏣🏤🏥🏦🏨🏩🏪🏫🏬🏭🏯🏰💒🗼🗽⛪🕌🛕🕍⛩🕋⛲⛺🌁🌃🏙️🌄🌅🌆🌇🌉🎠🎡🎢🚂🚃🚄🚅🚆🚇🚈🚉🚊🚝🚞🚋🚌🚍🚎🚐🚑🚒🚓🚔🚕🚖🚗🚘🚙🛻🚚🚛🚜🏎️🏍️🛵🛺🚲🛴🚏🛣️🛤️⛽🚨🚥🚦🚧⚓⛵🚤🛳️⛴️🛥️🚢✈️🛩️🛫🛬🪂💺🚁🚟🚠🚡🛰️🚀🛸🪐🌠🌌⛱️🎆🎇🎑💴💵💶💷🗿🛂🛃🛄🛅🧭</span></p><h1 id="物品-emoji"><a href="#物品-emoji" class="headerlink" title="物品 emoji"></a>物品 emoji</h1><p><span style="font-size:xx-large">  💌💎🔪💈🚪🚽🚿🛁⌛⏳⌚⏰🎈🎉🎊🎎🎏🎐🎀🎁📯📻📱📲☎📞📟📠🔋🔌💻💽💾💿📀🎥📺📷📹📼🔍🔎🔬🔭📡💡🔦🏮📔📕📖📗📘📙📚📓📃📜📄📰📑🔖💰💴💵💶💷💸💳✉📧📨📩📤📥📦📫📪📬📭📮✏✒📝📁📂📅📆📇📈📉📊📋📌📍📎📏📐✂🔒🔓🔏🔐🔑🔨🔫🔧🔩🔗💉💊🚬🔮🚩🎌💦💨</span></p><h1 id="标志-emoji"><a href="#标志-emoji" class="headerlink" title="标志 emoji"></a>标志 emoji</h1><p><span style="font-size:xx-large">  ♠️♥️♦️♣️🃏🀄🎴🔇🔈🔉🔊📢📣📯🔔🔕🎵🎶💹🛗🏧🚮🚰♿🚹🚺🚻🚼🚾⚠️🚸⛔🚫🚳🚭🚯🚱🚷📵🔞☢️☣️⬆️↗️➡️↘️⬇️↙️⬅️↖️↕️↔️↩️↪️⤴️⤵️🔃🔄🔙🔚🔛🔜🔝🛐⚛️🕉️✡️☸️☯️✝️☦️☪️☮️🕎🔯♈♉♊♋♌♍♎♏♐♑♒♓⛎🔀🔁🔂▶️⏩⏭️⏯️◀️⏪⏮️🔼⏫🔽⏬⏸️⏹️⏺️⏏️🎦🔅🔆📶📳📴♀️♂️✖️➕➖➗♾️‼️⁉️❓❔❕❗〰️💱💲⚕️♻️⚜️🔱📛🔰⭕✅☑️✔️❌❎➰➿ 〽️✳️✴️❇️©️®️™️<span style="font-size:xx-large"> ️⃣*️⃣0️⃣1️⃣2️⃣3️⃣4️⃣5️⃣6️⃣7️⃣8️⃣9️⃣🔟🔠🔡🔢🔣🔤🅰️🆎🅱️🆑🆒🆓ℹ️🆔Ⓜ️🆕🆖🅾️🆗🅿️🆘🆙🆚🈁🈂️🈷️🈶🈯🉐🈹🈚🈲🉑🈸🈴🈳㊗️㊙️🈺🈵🔴🟠🟡🟢🔵🟣🟤⚫⚪🟥🟧🟨🟩🟦🟪🟫⬛⬜◼️◻️◾◽▪️▫️🔶🔷🔸🔹🔺🔻💠🔘🔳🔲🏁🚩🎌🏴🏳️🏳️‍🌈🏳️‍⚧️🏴‍☠️<br></span></p><h1 id="生肖-emoji"><a href="#生肖-emoji" class="headerlink" title="生肖 emoji"></a>生肖 emoji</h1><p><span style="font-size:xx-large">  🐁🐂🐅🐇🐉🐍🐎🐐🐒🐓🐕🐖</span></p><h1 id="星座-emoji"><a href="#星座-emoji" class="headerlink" title="星座 emoji"></a>星座 emoji</h1><p><span style="font-size:xx-large">  ♈♉♊♋♌♍♎♏♐♑♒♓⛎</span></p><h1 id="钟表-emoji"><a href="#钟表-emoji" class="headerlink" title="钟表 emoji"></a>钟表 emoji</h1><p><span style="font-size:xx-large">  🕛🕧🕐🕜🕑🕝🕒🕞🕓🕟🕔🕠🕕🕡🕖🕢🕗🕣🕘🕤🕙🕥🕚🕦⌛⏳⌚⏰⏱⏲🕰</span></p><h1 id="心形-emoji"><a href="#心形-emoji" class="headerlink" title="心形 emoji"></a>心形 emoji</h1><p><span style="font-size:xx-large">  💘❤💓💔💕💖💗💙💚💛💜💝💞💟❣</span></p><h1 id="花草-emoji"><a href="#花草-emoji" class="headerlink" title="花草 emoji"></a>花草 emoji</h1><p>️️<span style="font-size:xx-large">  💐🌸💮🏵️🌹🥀🌺🌻🌼🌷🌱🌿☘️🍀</span></p><h1 id="树叶-emoji"><a href="#树叶-emoji" class="headerlink" title="树叶 emoji"></a>树叶 emoji</h1><p><span style="font-size:xx-large">  🌿☘️🍀🍁🍂🍃</span></p><h1 id="月亮-emoji"><a href="#月亮-emoji" class="headerlink" title="月亮 emoji"></a>月亮 emoji</h1><p><span style="font-size:xx-large">  🌑🌒🌓🌔🌕🌖🌗🌘🌙🌚🌛🌜🌝</span></p><h1 id="水果-emoji"><a href="#水果-emoji" class="headerlink" title="水果 emoji"></a>水果 emoji</h1><p><span style="font-size:xx-large">  🍇🍈🍉🍊🍋🍌🍍🍎🍏🍐🍑🍒🍓🥝</span></p><h1 id="钱币-emoji"><a href="#钱币-emoji" class="headerlink" title="钱币 emoji"></a>钱币 emoji</h1><p><span style="font-size:xx-large">  💴💵💶💷💰💸💳</span></p><h1 id="交通-emoji"><a href="#交通-emoji" class="headerlink" title="交通 emoji"></a>交通 emoji</h1><p><span style="font-size:xx-large">  🚂🚃🚄🚅🚆🚇🚈🚉🚊🚝🚞🚋🚌🚍🚎🚏🚐🚑🚒🚓🚔🚕🚖🚗🚘🚚🚛🚜🚲⛽🚨🚥🚦🚧⚓⛵🚣🚤🚢✈💺🚁🚟🚠🚡🚀</span></p><h1 id="建筑-emoji"><a href="#建筑-emoji" class="headerlink" title="建筑 emoji"></a>建筑 emoji</h1><p><span style="font-size:xx-large">  🏟️🏛️🏗️🛖🏘️🏚️🏠🏡🏢🏣🏤🏥🏦🏨🏩🏪🏫🏬🏭🏯🏰💒🗼🗽⛪🕌🛕🕍⛩️🕋⛲⛺🌁🌃🏙️🌄🌅🌆🌇🌉</span></p><h1 id="办公-emoji"><a href="#办公-emoji" class="headerlink" title="办公 emoji"></a>办公 emoji</h1><p><span style="font-size:xx-large">  📱📲☎️📞📟📠🔋🔌💻🖥️🖨️⌨️🖱️🖲️💽💾💿📀🧮🎥🎞️📽️📺📷📸📹📼🔍🔎🕯️💡🔦🏮🪔📔📕📖📗📘📙📚📓📒📃📜📄📰🗞️📑🔖🏷️💰🪙💴💵💶💷💸💳🧾✉️📧📨📩📤📥📦📫📪📬📭📮🗳️✏️✒️🖋️🖊️🖌️🖍️📝📁📂🗂️📅📆🗒️🗓️📇📈📉📊📋📌📍📎🖇️📏📐✂️🗃️🗄️🗑️🔒🔓🔏🔐🔑🗝️</span></p><h1 id="箭头-emoji"><a href="#箭头-emoji" class="headerlink" title="箭头 emoji"></a>箭头 emoji</h1><p><span style="font-size:xx-large">  ⬆↗➡↘⬇↙⬅↖↕↔↩↪⤴⤵🔃🔄🔙🔚🔛🔜🔝</span></p><h1 id="数字-emoji"><a href="#数字-emoji" class="headerlink" title="数字 emoji"></a>数字 emoji</h1><p><span style="font-size:xx-large">  <span style="font-size:xx-large"> ️⃣*️⃣0️⃣1️⃣2️⃣3️⃣4️⃣5️⃣6️⃣7️⃣8️⃣9️⃣</span></p><h1 id="汉字-emoji"><a href="#汉字-emoji" class="headerlink" title="汉字 emoji"></a>汉字 emoji</h1><p><span style="font-size:xx-large">  🈷️🈶🈯🉐🈹🈚🈲🉑🈸🈴🈳㊗️㊙️🈺🈵</span></p><h1 id="圆圈-emoji"><a href="#圆圈-emoji" class="headerlink" title="圆圈 emoji"></a>圆圈 emoji</h1><p><span style="font-size:xx-large">  🔴🟠🟡🟢🔵🟣🟤⚫⚪ ‍ ‍ ‍‍ ‍‍ ‍‍ </span></p><h1 id="天气-emoji"><a href="#天气-emoji" class="headerlink" title="天气 emoji"></a>天气 emoji</h1><p><span style="font-size:xx-large">  ⛅☁⛈☀⚡❄☃⛄☔☂ϟ☀☁☂☃☄☉☼☽☾♨❄❅❆</span></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>js获取地址栏参数</title>
      <link href="/blog/p/2022ObtainingJS/"/>
      <url>/blog/p/2022ObtainingJS/</url>
      
        <content type="html"><![CDATA[<p>js获取地址栏参数</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取地址栏参数，name:参数名称</span></span><br><span class="line"><span class="attr">getUrlParms</span>: <span class="keyword">function</span> <span class="title function_">getUrlParms</span>(<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;(^|&amp;)&quot;</span> + name + <span class="string">&quot;=([^&amp;]*)(&amp;|$)&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> r = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>.<span class="title function_">split</span>(<span class="string">&quot;?&quot;</span>)[<span class="number">1</span>].<span class="title function_">match</span>(reg);</span><br><span class="line">        <span class="keyword">if</span> (r != <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">unescape</span>(r[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宝塔Java项目日志 本地日志文件位置</title>
      <link href="/blog/p/2021BaotaJava/"/>
      <url>/blog/p/2021BaotaJava/</url>
      
        <content type="html"><![CDATA[<p>宝塔Java项目日志 本地日志文件位置 宝塔 java -jar 日志文件</p><p><img src="https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2021/bt0.png"></p><h2 id="s-java-jar-xxx-jar后-所有输出的日志均保存在以下目录内"><a href="#s-java-jar-xxx-jar后-所有输出的日志均保存在以下目录内" class="headerlink" title="s java -jar xxx.jar后 所有输出的日志均保存在以下目录内"></a>s java -jar xxx.jar后 所有输出的日志均保存在以下目录内</h2><blockquote><p>&#x2F;var&#x2F;tmp&#x2F;springboot&#x2F;vhost&#x2F;logs</p></blockquote><p><img src="https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2021/bt1.png"></p><h2 id="内置项目和独立项目-更改springboot路径为对应目录"><a href="#内置项目和独立项目-更改springboot路径为对应目录" class="headerlink" title="内置项目和独立项目,更改springboot路径为对应目录"></a>内置项目和独立项目,更改springboot路径为对应目录</h2>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go gorm 原生SQL查询 命名参数方式  Query Raw SQL with Scan , Named parameters</title>
      <link href="/blog/p/2021QueryRaw/"/>
      <url>/blog/p/2021QueryRaw/</url>
      
        <content type="html"><![CDATA[<p>gorm docs <a href="https://gorm.io/docs/sql_builder.html">https://gorm.io/docs/sql_builder.html</a></p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> MerchBill <span class="keyword">struct</span> &#123;</span><br><span class="line">ID        <span class="type">uint</span>           <span class="string">`gorm:&quot;primarykey&quot;`</span> <span class="comment">// 主键ID</span></span><br><span class="line">CreatedAt time.Time      <span class="comment">// 创建时间</span></span><br><span class="line">UpdatedAt time.Time      <span class="comment">// 更新时间</span></span><br><span class="line">DeletedAt gorm.DeletedAt <span class="string">`gorm:&quot;index&quot; json:&quot;-&quot;`</span> <span class="comment">// 删除时间</span></span><br><span class="line">Applyno  <span class="type">string</span>   <span class="string">`json:&quot;applyno&quot; form:&quot;applyno&quot; gorm:&quot;column:applyno;comment:订单号;type:varchar(255);&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getList</span><span class="params">(info req.Mer)</span></span> (err <span class="type">error</span>, list <span class="keyword">interface</span>&#123;&#125;, total <span class="type">int64</span>) &#123; </span><br><span class="line">db := *gorm.DB.Model(&amp;MerchBill&#123;&#125;)</span><br><span class="line"><span class="keyword">var</span> MerchBills []MerchBill</span><br><span class="line"><span class="keyword">var</span> MerchBillsCount []MerchBill</span><br><span class="line"></span><br><span class="line">sqlHeader := <span class="string">&quot;SELECT bill.*,mer.mobile,mer.merchname  &quot;</span></span><br><span class="line">sqlHeaderCount := <span class="string">&quot;SELECT COUNT(*) AS countnum &quot;</span></span><br><span class="line">sql := <span class="string">&quot; FROM billtable AS bill left join merch_user as mer on mer.id = bill.merchid WHERE 1 &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> sqlParam <span class="keyword">struct</span> &#123;</span><br><span class="line">Applyno       <span class="type">string</span></span><br><span class="line">Status        *<span class="type">int</span></span><br><span class="line">Applytype     *<span class="type">int</span></span><br><span class="line">Applyrealname <span class="type">string</span></span><br><span class="line">Merchname     <span class="type">string</span></span><br><span class="line">Limit         <span class="type">int</span></span><br><span class="line">Offset        <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> info.Applyno != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">sql += <span class="string">&quot; AND `bill`.applyno = @Applyno &quot;</span></span><br><span class="line">sqlParam.Applyno = info.Applyno</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> info.Status != <span class="literal">nil</span> &#123;</span><br><span class="line">sql += <span class="string">&quot; AND `bill`.status = @Status &quot;</span></span><br><span class="line">sqlParam.Status = info.Status</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> info.Applytype != <span class="literal">nil</span> &#123;</span><br><span class="line">sql += <span class="string">&quot; AND `bill`.applytype = @Applytype &quot;</span></span><br><span class="line">sqlParam.Applytype = info.Applytype</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> info.Applyrealname != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">sql += <span class="string">&quot; AND `bill`.applyrealname = @Applyrealname &quot;</span></span><br><span class="line">sqlParam.Applyrealname = info.Applyrealname</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> info.Merchname != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">sql += <span class="string">&quot; AND `mer`.merchname. LIKE @Merchname &quot;</span></span><br><span class="line">sqlParam.Merchname = info.Merchname</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sqlFooter := <span class="string">&quot; ORDER BY id DESC LIMIT @Offset,@Limit&quot;</span></span><br><span class="line">sqlParam.Limit = info.PageSize</span><br><span class="line">sqlParam.Offset = info.PageSize * (info.Page - <span class="number">1</span>)</span><br><span class="line">err = db.Raw(sqlHeader+sql+sqlFooter, sqlParam).Scan(&amp;MerchBills).Error</span><br><span class="line">err = db.Raw(sqlHeaderCount+sql, sqlParam).Scan(&amp;MerchBillsCount).Error</span><br><span class="line">total = MerchBillsCount[<span class="number">0</span>].Countnum</span><br><span class="line"><span class="keyword">return</span> err, MerchBills, total</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go 处理PHP serialize序列化数据 反序列化 Go php serialize to json</title>
      <link href="/blog/p/2021GoJson/"/>
      <url>/blog/p/2021GoJson/</url>
      
        <content type="html"><![CDATA[<p>代码地址 <a href="https://github.com/harry-1012/Go-PHP-serialize-json">https://github.com/harry-1012/Go-PHP-serialize-json</a><br>php serialize to json (Go)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [0] =&gt; Array</span><br><span class="line">        (</span><br><span class="line">            [id] =&gt; 1</span><br><span class="line">            [price] =&gt; 80</span><br><span class="line">            [name] =&gt; 一个名字</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>phpserialize string</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a:1:&#123;i:0;a:3:&#123;s:2:&quot;id&quot;;i:1;s:5:&quot;price&quot;;i:80;s:4:&quot;name&quot;;s:12:&quot;一个名字&quot;;&#125;&#125;</span><br></pre></td></tr></table></figure><p>to json</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[&#123;&quot;Id&quot;:1,&quot;Price&quot;:80,&quot;Name&quot;:&quot;一个名字&quot;&#125;]</span><br></pre></td></tr></table></figure><p>run go test</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;encoding/json&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;net/url&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/harry-1012/phpserialize&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> serObj <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> serializeStruct <span class="keyword">struct</span> &#123;</span><br><span class="line">Id    <span class="type">int64</span></span><br><span class="line">Price <span class="type">int64</span></span><br><span class="line">Name  <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(serObj *serObj)</span></span> Phpserialize2Json(serialize <span class="type">string</span>) (jsonres <span class="type">string</span>) &#123;</span><br><span class="line"><span class="keyword">var</span> serializeMap []<span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">err := phpserialize.Unmarshal([]<span class="type">byte</span>(serialize), &amp;serializeMap)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> convertData serializeStruct</span><br><span class="line"><span class="keyword">var</span> jsonMap []serializeStruct</span><br><span class="line"><span class="keyword">var</span> jsonRes <span class="type">string</span></span><br><span class="line">listKey := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> _, list := <span class="keyword">range</span> serializeMap &#123;</span><br><span class="line">listKey += <span class="number">1</span></span><br><span class="line">keyIndexNumCount := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> vkey, value := <span class="keyword">range</span> list.(<span class="keyword">map</span>[<span class="keyword">interface</span>&#123;&#125;]<span class="keyword">interface</span>&#123;&#125;) &#123;</span><br><span class="line">keyIndexNumCount += <span class="number">1</span></span><br><span class="line"><span class="keyword">switch</span> vkey &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;id&quot;</span>:</span><br><span class="line">convertData.Id = value.(<span class="type">int64</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;price&quot;</span>:</span><br><span class="line">convertData.Price = value.(<span class="type">int64</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;name&quot;</span>:</span><br><span class="line">convertData.Name = value.(<span class="type">string</span>)</span><br><span class="line">paramNums := <span class="number">3</span></span><br><span class="line"><span class="keyword">if</span> keyIndexNumCount == paramNums &#123;</span><br><span class="line">jsonMap = <span class="built_in">append</span>(jsonMap, convertData)</span><br><span class="line"><span class="keyword">if</span> listKey &gt;= <span class="built_in">len</span>(serializeMap) &#123;</span><br><span class="line">data, errsjon := json.Marshal(jsonMap)</span><br><span class="line"><span class="keyword">if</span> errsjon != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(errsjon)</span><br><span class="line">&#125;</span><br><span class="line">enEscapeUrl, queryUnescapeErr := url.QueryUnescape(<span class="type">string</span>(data))</span><br><span class="line"><span class="keyword">if</span> queryUnescapeErr != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(queryUnescapeErr)</span><br><span class="line">&#125;</span><br><span class="line">jsonRes = enEscapeUrl</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> jsonRes</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决uniapp 小程序 vendor.js过大 大于500K 无法转换ES5问题</title>
      <link href="/blog/p/2021Solvinguniapp/"/>
      <url>/blog/p/2021Solvinguniapp/</url>
      
        <content type="html"><![CDATA[<h4 id="解决uniapp-小程序-vendor-js过大-大于500K-无法转换ES5问题"><a href="#解决uniapp-小程序-vendor-js过大-大于500K-无法转换ES5问题" class="headerlink" title="解决uniapp 小程序 vendor.js过大 大于500K 无法转换ES5问题"></a>解决uniapp 小程序 vendor.js过大 大于500K 无法转换ES5问题</h4><p>项目页面147个,编译后的vendor.js大小2.4M,导致无法正常转换ES5,导致sourcemap下载后都是分号;;;;;, 无法定位线上错误日志的文件位置.</p><p>第一步是最重要的,非核心页面做分包处理<a href="https://uniapp.dcloud.io/collocation/pages?id=subpackages">分包处理文档</a>,然后在manifest.json文件中进行如下配置,这样打包的时候只有主包页面会打包到vendor.js内</p><blockquote><p>manifest.json</p></blockquote><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;mp-weixin&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;optimization&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;subPackages&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>第二步:使用jscompress等工具进行二次压缩</p><p>最终成功将vendor.js缩小微160K,成功转换为ES5</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uniapp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uniapp上架华为应用商店 隐私处理</title>
      <link href="/blog/p/2021PrivacyHandling/"/>
      <url>/blog/p/2021PrivacyHandling/</url>
      
        <content type="html"><![CDATA[<p>1.不要申请App内未使用的权限<br>2.在app-plus下的privacy中配置原生template隐私协议弹窗,注意这里的template会在APP启动前优先运行,华为商店审核规则要求必须在进入应用先弹出隐私询问.</p><p>manifest.json 相关配置</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;x&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;appid&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;x&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;x&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;versionName&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;3.0.60&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;versionCode&quot;</span> <span class="punctuation">:</span> <span class="number">100</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;transformPx&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;app-plus&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;distribute&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;android&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;permissions&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                    <span class="string">&quot;&lt;uses-permission android:name=\&quot;android.permission.CALL_PHONE\&quot;/&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="string">&quot;&lt;uses-permission android:name=\&quot;android.permission.INTERNET\&quot;/&gt;&quot;</span></span><br><span class="line">                <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;permissionExternalStorage&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;request&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;prompt&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;为保证您正常、安全地使用，需要获取设备识别码（部分手机提示为获取手机号码）使用权限，请允许。&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;permissionPhoneState&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;request&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;prompt&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;为保证您正常、安全地使用，需要获取设备识别码（部分手机提示为获取手机号码）使用权限，请允许。&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;autoSdkPermissions&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ios&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;capabilities&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;entitlements&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;com.apple.developer.associated-domains&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span> <span class="string">&quot;applinks:static-3d89687e-06a3-477e-9255-89948cfcaa4a.bspapp.com&quot;</span> <span class="punctuation">]</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;privacy&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;prompt&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;template&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;template&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;title&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;服务协议和隐私政策&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;message&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;　　请你务必审慎阅读、充分理解“服务协议”和“隐私政策”各条款，包括但不限于：为了更好的向你提供服务，我们需要收集你的设备标识、操作日志等信息用于分析、优化应用性能。&lt;br/&gt;　　你可阅读&lt;a href=\&quot;https://xieyi.com\&quot;&gt;《服务协议》&lt;/a&gt;和&lt;a href=\&quot;https://xieyi.com\&quot;&gt;《隐私政策》&lt;/a&gt;了解详细信息。如果你同意，请点击下面按钮开始接受我们的服务。&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;buttonAccept&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;同意并继续&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;buttonRefuse&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;暂不同意&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;second&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;title&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;温馨提示&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;message&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;　　进入应用前，你需先同意&lt;a href=&#x27;\&quot;&#x27;https://https://xieyi.com\&quot;&gt;《服务协议》&lt;/a&gt;和&lt;a href=\&quot;https://xieyi.com\&quot;&gt;《隐私政策》&lt;/a&gt;，否则将退出应用。&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;buttonAccept&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;同意并继续&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;buttonRefuse&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;退出应用&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uniapp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MQTT client conflict 客户端ID冲突导致重复掉线问题</title>
      <link href="/blog/p/2020mqttconflict/"/>
      <url>/blog/p/2020mqttconflict/</url>
      
        <content type="html"><![CDATA[<p>最近在做物连开发过程中用到了MQTT协议,开发过程中遇到一个问题:每次建立连接后,很快就会断开重新连接,然后不断断开重链 </p><p>首先订阅端(设备端)subscribe 与 推送端(publish)是完全分开的</p><p>前后者身份可以随时互换,它们都单独与MQTT服务器保持通讯,这样订阅端和推送端在建立连接时,注意是建立链接不是获取订阅或者发送推送信息时</p><p>clientID应该是独立唯一的,比如用时间戳+uid的方式, 当publish推送时再将设备ID组合发送, 订阅端subscribe时就可以辨别设备号来接收推送消息了</p><p>我犯的错误主要是在订阅端和推送端建立链接connect时,都只使用了主题topic+设备ID的形式构建clientID,这样导致两端的clientID完全一致,导致了client conflict冲突的问题</p><p>解决办法只要将client加上时间戳和uid即可</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MQTT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL存储字符表情.</title>
      <link href="/blog/p/2020MySQLstores/"/>
      <url>/blog/p/2020MySQLstores/</url>
      
        <content type="html"><![CDATA[<p>最近在小程序评论中要支持字符表情,发现字符表情一个字符占四个字节,所以需要将字段与数据库改为utf8mb4编码格式,但是改完数据库,表和字段编码后表情一直是问号???</p><p>需要将字段与数据库改为utf8mb4编码格式;</p><p>记录一个自己犯的错误: 不仅要修改字段的编码格式,还要修改表的编码格式,mysql数据库的的config文件</p><p>还要修改创建数据库链接时所用字符编码格式为’utf8mb4’才行</p><p>之前在修改了前三个地方的编码格式后,无论怎么尝试都不生效,表情一直是???,结果发现代码里创建数据库链接的地方编码格式还是utf-8,改成utf8mb4,再试好了</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ApiCloud打包H5壳APP,apicloud h5使用api对象接口,h5退出App应用方法,Apicloud Web App退出App</title>
      <link href="/blog/p/2019Alipay/"/>
      <url>/blog/p/2019Alipay/</url>
      
        <content type="html"><![CDATA[<p>ApiCloud打包H5壳APP,apicloud h5使用api对象接口,h5退出App应用方法,Apicloud Web App退出App</p><p>使用H5打包的apicloud web app,需要退出App时,可以直接调用这个接口</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">onclick</span>=<span class="string">&#x27;closeApp()&#x27;</span>&gt;</span>直接退出!<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    api.<span class="title function_">closeWidget</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">silent</span>:<span class="literal">true</span> <span class="comment">// 静默退出</span></span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>ApiCloud api接口可以直接在Web App里使用<br><a href="https://docs.apicloud.com/Client-API/api#14">https://docs.apicloud.com/Client-API/api#14</a></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ApiCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP图像文字绘制 坐标尺寸测量 PHP图像文字水平居中处理</title>
      <link href="/blog/p/2020PHPImageTextDrawing/"/>
      <url>/blog/p/2020PHPImageTextDrawing/</url>
      
        <content type="html"><![CDATA[<p>PHP绘制文字到图像时,有时需要文字居中,这时候就要用到imagettfbbox函数.<br>示例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.配置图片路径</span></span><br><span class="line"><span class="variable">$src</span> = <span class="string">&#x27;图片本地路径&#x27;</span>;</span><br><span class="line"><span class="comment">//2.获取图片信息</span></span><br><span class="line"><span class="variable">$info</span> = <span class="title function_ invoke__">getimagesize</span>(<span class="variable">$src</span>);</span><br><span class="line"><span class="comment">//3.通过编号获取图像类型</span></span><br><span class="line"><span class="variable">$type</span> = <span class="title function_ invoke__">image_type_to_extension</span>(<span class="variable">$info</span>[<span class="number">2</span>], <span class="literal">false</span>);</span><br><span class="line"><span class="comment">//4.在内存中创建和图像类型一样的图像</span></span><br><span class="line"><span class="variable">$fun</span> = <span class="string">&quot;imagecreatefrom&quot;</span> . <span class="variable">$type</span>;</span><br><span class="line"><span class="comment">//5.图片复制到内存</span></span><br><span class="line"><span class="variable">$image</span> = <span class="variable">$fun</span>(<span class="variable">$src</span>);</span><br><span class="line"><span class="variable">$font</span> = <span class="string">&quot;字体.ttf&quot;</span>;</span><br><span class="line"><span class="variable">$content</span>=<span class="string">&#x27;我是文字内容&#x27;</span>;</span><br><span class="line"><span class="variable">$fontSize</span> = <span class="number">40</span>;<span class="comment">//像素字体大小</span></span><br><span class="line"><span class="comment">//设置字体颜色和透明度</span></span><br><span class="line"><span class="variable">$color</span> = <span class="title function_ invoke__">imagecolorallocatealpha</span>(<span class="variable">$image</span>, <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"><span class="comment">//计算文字边距坐标位置</span></span><br><span class="line"><span class="variable">$fontBox</span> = <span class="title function_ invoke__">imagettfbbox</span>(<span class="variable">$fontSize</span>, <span class="number">0</span>, <span class="variable">$font</span>, <span class="variable">$content</span>);</span><br><span class="line"><span class="comment">//文字水平居中处理 $info[0]是图像总宽度,通过getimagesize($src)函数获取图像宽度.</span></span><br><span class="line"><span class="title function_ invoke__">imagettftext</span>(<span class="variable">$image</span>, <span class="variable">$fontSize</span>, <span class="number">0</span>,<span class="title function_ invoke__">ceil</span>((<span class="variable">$info</span>[<span class="number">0</span>]- <span class="variable">$fontBox</span>[<span class="number">2</span>]) / <span class="number">2</span>), <span class="variable">$merchnameHpx</span>, <span class="variable">$color</span>, <span class="variable">$font</span>, <span class="variable">$content</span>);</span><br><span class="line"><span class="variable">$fun</span> = <span class="string">&quot;image&quot;</span> . <span class="variable">$type</span>;</span><br><span class="line"><span class="comment">//保存图片到本地</span></span><br><span class="line"><span class="variable">$resultImg_2</span> = <span class="title function_ invoke__">uniqid</span>() . <span class="string">&#x27;bg_res.&#x27;</span> . <span class="variable">$type</span>;</span><br><span class="line"><span class="variable">$fun</span>(<span class="variable">$image</span>, <span class="string">&#x27;../本地保存路径/&#x27;</span> . <span class="variable">$resultImg_2</span>);</span><br><span class="line"><span class="comment">/*销毁图片*/</span></span><br><span class="line"><span class="title function_ invoke__">imagedestroy</span>(<span class="variable">$image</span>);</span><br></pre></td></tr></table></figure><hr><p>imagettfbbox — 取得使用 TrueType 字体的文本的范围</p><p>参数说明 ¶<br>imagettfbbox ( float $size , float $angle , string $fontfile , string $text ) : array<br>本函数计算并返回一个包围着 TrueType 文本范围的虚拟方框的像素大小。</p><p>size<br>像素单位的字体大小。<br>angle<br>text 将被度量的角度大小。<br>fontfile<br>TrueType 字体文件的文件名（可以是 URL）。根据 PHP 所使用的 GD 库版本，可能尝试搜索那些不是以 ‘&#x2F;‘ 开头的文件名并加上 ‘.ttf’ 的后缀并搜索库定义的字体路径。<br>text<br>要度量的字符串。</p><hr><p>返回值<br>imagettfbbox() 返回一个含有 8 个单元的数组表示了文本外框的四个角：<br>0左下角 X 位置<br>1左下角 Y 位置<br>2右下角 X 位置<br>3右下角 Y 位置<br>4右上角 X 位置<br>5右上角 Y 位置<br>6左上角 X 位置<br>7左上角 Y 位置</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 绘图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微擎登录后,直接跳转到应用后台</title>
      <link href="/blog/p/2020AfterloggingWeEngine/"/>
      <url>/blog/p/2020AfterloggingWeEngine/</url>
      
        <content type="html"><![CDATA[<p>微擎登录后,直接跳转到应用后台</p><p>微擎版本: v2.5.4</p><p>根目录\web\source\user\login.ctrl.php</p><p>底部找到</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">itoast</span>(<span class="string">&quot;欢迎回来，<span class="subst">&#123;$record[&#x27;username&#x27;]&#125;</span>&quot;</span>, <span class="variable">$forward</span>, <span class="string">&#x27;success&#x27;</span>);</span><br></pre></td></tr></table></figure><p>代码,在前面添加</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$forward</span> =<span class="string">&#x27;./index.php?c=home&amp;a=welcome&amp;do=ext&amp;m=模块名&#x27;</span>;</span><br></pre></td></tr></table></figure><p>最终</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">isetcookie</span>(<span class="string">&#x27;__uid&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="number">7</span> * <span class="number">86400</span>);</span><br><span class="line"><span class="title function_ invoke__">isetcookie</span>(<span class="string">&#x27;__uniacid&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="number">7</span> * <span class="number">86400</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$forward</span> =<span class="string">&#x27;./index.php?c=home&amp;a=welcome&amp;do=ext&amp;m=xxx&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">itoast</span>(<span class="string">&quot;欢迎回来，<span class="subst">&#123;$record[&#x27;username&#x27;]&#125;</span>。&quot;</span>, <span class="variable">$forward</span>, <span class="string">&#x27;success&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>献血记</title>
      <link href="/blog/p/2020BloodDonation/"/>
      <url>/blog/p/2020BloodDonation/</url>
      
        <content type="html"><![CDATA[<p>记录第二次献血<br><img src="https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2020/xianxue2.jpg" alt="(^ω^)"><br><img src="https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2020/xianxue3.jpg" alt="(^ω^)"></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 公益 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进程 线程 子进程 About Processes,Threads,Coroutine</title>
      <link href="/blog/p/2020ProcessesThreads/"/>
      <url>/blog/p/2020ProcessesThreads/</url>
      
        <content type="html"><![CDATA[<p>here is a story to explain what Processes,Threads,Coroutine is,and<br>understanding of parallel and concurrent programming</p><h3 id="1-Parallel-and-Concurrent"><a href="#1-Parallel-and-Concurrent" class="headerlink" title="1.Parallel and Concurrent"></a>1.Parallel and Concurrent</h3><ul><li>Parallel: simultaneous execution of multiple tasks</li><li>Concurrent Multiple tasks are executed alternately on the same processor</li></ul><h3 id="2-Processes"><a href="#2-Processes" class="headerlink" title="2.Processes"></a>2.Processes</h3><p><img src="https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2020/Processes%20and%20Threads2.png" alt="(^ω^)"><br>mean program in progress</p><h4 id="strengths-and-weaknesses"><a href="#strengths-and-weaknesses" class="headerlink" title="strengths and weaknesses"></a>strengths and weaknesses</h4><p>strengths:</p><ul><li>more stability and safety</li></ul><p>weaknesses:</p><ul><li>require more resource overhead when processe swiching</li><li>IPC is complex and time-consuming</li></ul><h3 id="3-Threads"><a href="#3-Threads" class="headerlink" title="3.Threads"></a>3.Threads</h3><p><img src="https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2020/Processes%20and%20Threads.png" alt="(^ω^)"><br>Thread contained in process,also called lightweight process</p><p>if Processes as a hight speed road, threads like the car, they make one processes can execute multiple task</p><h4 id="strengths-and-weaknesses-1"><a href="#strengths-and-weaknesses-1" class="headerlink" title="strengths and weaknesses"></a>strengths and weaknesses</h4><p>strengths:</p><ul><li>require less resource overhead when threads swiching</li></ul><p>weaknesses:</p><ul><li>not stable enough,data might be lost,deadlock</li></ul><h3 id="4-Coroutine"><a href="#4-Coroutine" class="headerlink" title="4.Coroutine"></a>4.Coroutine</h3><p>coroutine is lightweight threads<br><img src="https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2020/Processes%20and%20Threads3.jpg" alt="(^ω^)"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">echoTimes</span>(<span class="params"><span class="variable">$msg</span>, <span class="variable">$max</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>; <span class="variable">$i</span> &lt;= <span class="variable">$max</span>; ++<span class="variable">$i</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$msg</span> iteration <span class="subst">$i</span>\n&quot;</span>;</span><br><span class="line">        <span class="keyword">yield</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">task1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">yield</span> <span class="keyword">from</span> <span class="title function_ invoke__">echoTimes</span>(<span class="string">&#x27;bar&#x27;</span>, <span class="number">5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>strengths:</p><ul><li>high execution efficiency</li><li>shared resource,no need lock</li></ul><p>for multi-core cpu,use multiple processes and coroutine,can get better performance</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 进程/线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP ZIPARCHIVE 压缩文件处理目录结构 PHP ZIPARCHIVE directory structure</title>
      <link href="/blog/p/2020PHPZIPARCHIVE/"/>
      <url>/blog/p/2020PHPZIPARCHIVE/</url>
      
        <content type="html"><![CDATA[<p>PHP ZIPARCHIVE 压缩文件处理目录结构 Prevent directory structure in compressed package</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$flag</span> = <span class="variable">$zip</span>-&gt;<span class="title function_ invoke__">open</span>(<span class="variable">$filePath</span>, \ZIPARCHIVE::<span class="variable constant_">CREATE</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$flag</span>!== <span class="literal">TRUE</span>) &#123;</span><br><span class="line">      <span class="comment">//if Linux,need check file authorization</span></span><br><span class="line">      <span class="keyword">exit</span>(<span class="string">&quot;open file err=&quot;</span>+<span class="variable">$flag</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//add test.php to zip file </span></span><br><span class="line"><span class="variable">$zip</span>-&gt;<span class="title function_ invoke__">addFile</span>(<span class="string">&#x27;test.php&#x27;</span>);</span><br><span class="line"><span class="comment">// run rename</span></span><br><span class="line"><span class="variable">$zip</span>-&gt;<span class="title function_ invoke__">renameName</span>(<span class="string">&#x27;test.php&#x27;</span>,<span class="string">&#x27;test.php&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>async await promise demo</title>
      <link href="/blog/p/2020async/"/>
      <url>/blog/p/2020async/</url>
      
        <content type="html"><![CDATA[<p>async await promise 实例</p><p><a href="https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/video/2020/promise.mp4">video demo</a></p><video id="video"  controls="" preload="none" width=100% poster="https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/video/2020/promise.png"><source id="mp4" src="https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/video/2020/promise.mp4" type="video/mp4"></video><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">step1</span>(<span class="params">query</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">success</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> waiting=<span class="number">2000</span>;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">           <span class="title function_">success</span>(<span class="string">&#x27;wait-time:&#x27;</span>+waiting+<span class="string">&#x27; step:&#x27;</span>+query);</span><br><span class="line">        &#125;, waiting);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">step2</span>(<span class="params">query</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">success</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> waiting=<span class="number">1000</span>;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">success</span>(<span class="string">&#x27;wait-time:&#x27;</span>+waiting+<span class="string">&#x27; step:&#x27;</span>+query);</span><br><span class="line">        &#125;, waiting);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">step3</span>(<span class="params">query</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">success</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> waiting=<span class="number">500</span>;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">success</span>(<span class="string">&#x27;wait-time:&#x27;</span>+waiting+<span class="string">&#x27; step:&#x27;</span>+query);</span><br><span class="line">        &#125;, waiting);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">task</span> = <span class="keyword">async</span>(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">step1</span>(<span class="string">&#x27;step1&#x27;</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">success</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(success);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">step2</span>(<span class="string">&#x27;step2&#x27;</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">success</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(success);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">step3</span>(<span class="string">&#x27;step3&#x27;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">success</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(success);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">task</span>();</span><br><span class="line"><span class="comment">// step 1,2,3 setTimout&#x27;time is decrement,but will execute in order by async function tack</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>axios表单形式提交数据 axios post data by form type</title>
      <link href="/blog/p/2020axiospost/"/>
      <url>/blog/p/2020axiospost/</url>
      
        <content type="html"><![CDATA[<p>axios post data by form type,axios application&#x2F;x-www-form-urlencoded</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">request</span>(&#123;</span><br><span class="line">        <span class="comment">// url: &#x27;&#x27;,</span></span><br><span class="line">        <span class="attr">transformRequest</span>: [<span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> ret = <span class="string">&#x27;&#x27;</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> it <span class="keyword">in</span> data) &#123;</span><br><span class="line">                ret += <span class="built_in">encodeURIComponent</span>(it) + <span class="string">&#x27;=&#x27;</span> + <span class="built_in">encodeURIComponent</span>(data[it]) + <span class="string">&#x27;&amp;&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> ret</span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="attr">headers</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">        <span class="attr">params</span>: query</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>武汉肺炎冠状病毒疫情信息接口Api</title>
      <link href="/blog/p/2020WuhanCoronavirus/"/>
      <url>/blog/p/2020WuhanCoronavirus/</url>
      
        <content type="html"><![CDATA[<p>请大家认准国家卫健委发布的权威数据，不私自传播疫情相关信息，相信权威媒体的专业发布，不造谣不传谣不信谣<br>数据仅供学习使用,禁止他用<br>含各国家和中国各城市历史统计.武汉加油 中国加油 众志成城 共渡难关!</p><h4 id="全局"><a href="#全局" class="headerlink" title="全局"></a>全局</h4><ul><li><p>请求类型: GET || POST</p></li><li><p>请求格式: application&#x2F;x-www-form-urlencoded</p></li><li><p>编码: UTF-8  时区:Asia&#x2F;Shanghai</p></li></ul><hr><h4 id="按城市查询-接口"><a href="#按城市查询-接口" class="headerlink" title="按城市查询-接口"></a>按城市查询-接口</h4><h5 id="测试地址"><a href="#测试地址" class="headerlink" title="测试地址"></a>测试地址</h5><p><a href="https://myapi.harrywork.com/public/?s=Whfy.city">https://myapi.harrywork.com/public/?s=Whfy.city</a></p><h5 id="请求参数"><a href="#请求参数" class="headerlink" title="请求参数"></a>请求参数</h5><table><thead><tr><th>参数名</th><th>参数类型</th><th>参数格式</th><th>必填</th><th>默认值</th><th>备注</th></tr></thead><tbody><tr><td>s</td><td>string</td><td>请填写 Whfy.city</td><td>必填</td><td>Whfy.city</td><td>方法名</td></tr><tr><td>page</td><td>int</td><td>&gt;&#x3D;1</td><td>选填</td><td>1</td><td>第?页</td></tr><tr><td>limit</td><td>int</td><td>1-5000</td><td>选填</td><td>200</td><td>每页?条</td></tr><tr><td>area</td><td>string</td><td>省份模糊搜索例如 湖北 不带’省’字</td><td>选填</td><td>无</td><td>末尾不要加’省’</td></tr><tr><td>city</td><td>string</td><td>城市模糊搜索例如 武汉 不带’市’字</td><td>选填</td><td>无</td><td>末尾不要加’市’</td></tr><tr><td>date_start</td><td>date</td><td>Y-m-d 2020-02-20</td><td>选填</td><td>无</td><td>date_end存在时必填</td></tr><tr><td>date_end</td><td>date</td><td>Y-m-d 2020-02-22</td><td>选填</td><td>无</td><td>date_start存在时必填</td></tr><tr><td>order</td><td>string</td><td>排序字段,可选值 confirm,suspect,dead,heal,create_time</td><td>选填</td><td>无</td><td>含义见返回值说明</td></tr><tr><td>order_sort</td><td>string</td><td>排序方式,可选值 DESC,ASC</td><td>选填</td><td>ASC</td><td>大写</td></tr></tbody></table><h2 id="返回值说明"><a href="#返回值说明" class="headerlink" title="返回值说明"></a>返回值说明<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// https://myapi.harrywork.com/public/?s=Whfy.city</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;ret&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;items&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;country&quot;</span><span class="punctuation">:</span> <span class="string">&quot;中国&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;area&quot;</span><span class="punctuation">:</span> <span class="string">&quot;湖北&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;武汉&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;confirm&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1590&quot;</span><span class="punctuation">,</span> <span class="comment">// 已确认 </span></span><br><span class="line">        <span class="attr">&quot;dead&quot;</span><span class="punctuation">:</span> <span class="string">&quot;85&quot;</span><span class="punctuation">,</span> <span class="comment">// 死亡</span></span><br><span class="line">        <span class="attr">&quot;heal&quot;</span><span class="punctuation">:</span> <span class="string">&quot;44&quot;</span><span class="punctuation">,</span> <span class="comment">// 治愈</span></span><br><span class="line">        <span class="attr">&quot;create_time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2020-01-28&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">339</span>  <span class="comment">// 计数count</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span> <span class="comment">// 错误信息</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></h2><h4 id="按国家查询-接口"><a href="#按国家查询-接口" class="headerlink" title="按国家查询-接口"></a>按国家查询-接口</h4><h5 id="测试地址-1"><a href="#测试地址-1" class="headerlink" title="测试地址"></a>测试地址</h5><p><a href="https://myapi.harrywork.com/public/?s=Whfy.count">https://myapi.harrywork.com/public/?s=Whfy.count</a></p><h5 id="请求参数-1"><a href="#请求参数-1" class="headerlink" title="请求参数"></a>请求参数</h5><table><thead><tr><th>参数名</th><th>参数类型</th><th>参数格式</th><th>必填</th><th>默认值</th><th>备注</th></tr></thead><tbody><tr><td>s</td><td>string</td><td>请填写 Whfy.count</td><td>必填</td><td>Whfy.count</td><td>方法名</td></tr><tr><td>country</td><td>string</td><td>国家模糊搜索例如 斯里兰卡</td><td>选填</td><td>无</td><td></td></tr><tr><td>page</td><td>int</td><td>&gt;&#x3D;1</td><td>选填</td><td>1</td><td>第?页</td></tr><tr><td>limit</td><td>int</td><td>1-5000</td><td>选填</td><td>200</td><td>每页?条</td></tr><tr><td>date_start</td><td>date</td><td>Y-m-d 2020-02-20</td><td>选填</td><td>无</td><td>date_end存在时必填</td></tr><tr><td>date_end</td><td>date</td><td>Y-m-d 2020-02-22</td><td>选填</td><td>无</td><td>date_start存在时必填</td></tr><tr><td>order</td><td>string</td><td>排序字段,可选值 confirm,suspect,dead,heal,create_time</td><td>选填</td><td>无</td><td>含义见返回值说明</td></tr><tr><td>order_sort</td><td>string</td><td>排序方式,可选值 DESC,ASC</td><td>选填</td><td>ASC</td><td>大写</td></tr></tbody></table><p>返回值说明</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// https://myapi.harrywork.com/public/?s=Whfy.count</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;ret&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;items&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;5&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;country&quot;</span><span class="punctuation">:</span> <span class="string">&quot;中国&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;confirm&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4685&quot;</span><span class="punctuation">,</span><span class="comment">// 已确认</span></span><br><span class="line">        <span class="attr">&quot;suspect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;98&quot;</span><span class="punctuation">,</span> <span class="comment">// 疑似</span></span><br><span class="line">        <span class="attr">&quot;dead&quot;</span><span class="punctuation">:</span> <span class="string">&quot;106&quot;</span><span class="punctuation">,</span><span class="comment">// 死亡</span></span><br><span class="line">        <span class="attr">&quot;heal&quot;</span><span class="punctuation">:</span> <span class="string">&quot;73&quot;</span><span class="punctuation">,</span><span class="comment">// 治愈</span></span><br><span class="line">        <span class="attr">&quot;create_time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2020-01-28&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><a href="https://news.qq.com/">数据来源:腾讯新闻</a></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>git重置成新仓库 git reset to new repository</title>
      <link href="/blog/p/2020gitreset/"/>
      <url>/blog/p/2020gitreset/</url>
      
        <content type="html"><![CDATA[<p>git重置成新仓库 git reset to new repository </p><ul><li>git checkout –orphan latest_branch</li><li>git add -A</li><li>git commit -am “commit message”</li><li>git branch -D master</li><li>git branch -m master</li><li>git push -f origin master</li></ul><p>one line:</p><p>git checkout –orphan latest_branch &amp;&amp; git add -A &amp;&amp; git commit -am “commit message” &amp;&amp; git branch -D master &amp;&amp; git branch -m master &amp;&amp; git push -f origin master</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wechat ban domain check</title>
      <link href="/blog/p/2019PreventingVue/"/>
      <url>/blog/p/2019PreventingVue/</url>
      
        <content type="html"><![CDATA[<p>wechat ban domain check! </p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$domain</span> = <span class="string">&#x27;https://baidu.com&#x27;</span>;</span><br><span class="line"><span class="variable">$domain</span> = <span class="title function_ invoke__">urlencode</span>(<span class="variable">$domain</span>);</span><br><span class="line"><span class="variable">$wxCheckUrl</span> = <span class="string">&#x27;https://weixin110.qq.com/cgi-bin/mmspamsupport-bin/newredirectconfirmcgi?main_type=2&amp;evil_type=20&amp;source=2&amp;url=&#x27;</span>;</span><br><span class="line"><span class="variable">$wxCheckUrl</span> .= <span class="variable">$domain</span>;</span><br><span class="line"><span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$wxCheckUrl</span>);</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="title function_ invoke__">uniqid</span>().<span class="string">&#x27;.txt&#x27;</span>,<span class="title function_ invoke__">json_encode</span>(<span class="variable">$res</span>));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>axios CROS每次请求多一次options请求 axios CROS request two times every time</title>
      <link href="/blog/p/2019axios/"/>
      <url>/blog/p/2019axios/</url>
      
        <content type="html"><![CDATA[<p>axios CROS每次请求多一次options请求<br>case: <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS</a><br>header’s param except for the following</p><ul><li>Accept</li><li>Accept-Language</li><li>Content-Language</li><li>Content-Type （需要注意额外的限制）</li><li>DPR</li><li>Downlink</li><li>Save-Data</li><li>Viewport-Width</li><li>Width<br>other param make the request become complex requests</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">config.<span class="property">headers</span>[<span class="string">&#x27;X-Token&#x27;</span>] = <span class="title function_">getToken</span>()</span><br></pre></td></tr></table></figure><p>here the reason is ‘X-Token’ </p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue.js阻止click事件穿透</title>
      <link href="/blog/p/2019PreventingVue/"/>
      <url>/blog/p/2019PreventingVue/</url>
      
        <content type="html"><![CDATA[<p>Vue.js阻止click事件穿透 </p><h4 id="将-click-”fn”-改为-click-stop-”fn”-即可"><a href="#将-click-”fn”-改为-click-stop-”fn”-即可" class="headerlink" title="将 @click&#x3D;”fn”  改为 @click.stop&#x3D;”fn” 即可"></a>将 @click&#x3D;”fn”  改为 @click.stop&#x3D;”fn” 即可</h4>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>支付宝转账跳转js跳转</title>
      <link href="/blog/p/2019wechatBan/"/>
      <url>/blog/p/2019wechatBan/</url>
      
        <content type="html"><![CDATA[<p>支付宝转账跳转js跳转</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> data = &#123;</span><br><span class="line">  <span class="string">&quot;s&quot;</span>: <span class="string">&quot;money&quot;</span>,</span><br><span class="line">  <span class="string">&quot;u&quot;</span>: <span class="string">&quot;20889012xxxxxxxx&quot;</span>,</span><br><span class="line">  <span class="string">&quot;a&quot;</span>: <span class="string">&quot;0.04&quot;</span>,</span><br><span class="line">  <span class="string">&quot;m&quot;</span>: <span class="string">&quot;HM07L520550221254&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> url = <span class="string">&#x27;alipays://platformapi/startapp?appId=20000123&amp;actionType=scan&amp;biz_data=&#x27;</span>+data;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">personal userId</span></span><br><span class="line"><span class="comment">20889012xxxxxxxx</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">company cooperation IP</span></span><br><span class="line"><span class="comment">20889012xxxxxxxx</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> payment </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP 获取小程序openID</title>
      <link href="/blog/p/2019PHPget/"/>
      <url>/blog/p/2019PHPget/</url>
      
        <content type="html"><![CDATA[<p>PHP 获取小程序openID</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$appid</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$secret</span> = <span class="variable language_">$this</span>-&gt;app;</span><br><span class="line"><span class="variable">$code</span> = <span class="variable">$_REQUEST</span>[<span class="string">&quot;code&quot;</span>];</span><br><span class="line"><span class="variable">$url</span> = <span class="string">&#x27;https://api.weixin.qq.com/sns/jscode2session?appid=&#x27;</span> . <span class="variable">$appid</span> . <span class="string">&#x27;&amp;secret=&#x27;</span> . <span class="variable">$secret</span> . <span class="string">&#x27;&amp;js_code=&#x27;</span> . <span class="variable">$code</span> . <span class="string">&#x27;&amp;grant_type=authorization_code&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$curl</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_RETURNTRANSFER, <span class="literal">true</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_TIMEOUT, <span class="number">500</span>);</span><br><span class="line"><span class="comment">// To ensure communication security,all api use https,so need use two line code to open ssl safety check</span></span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_SSL_VERIFYHOST, <span class="literal">false</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$curl</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$curl</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$json_obj</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$res</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="variable">$openid</span> = <span class="variable">$json_obj</span>[<span class="string">&quot;openid&quot;</span>];</span><br><span class="line"><span class="variable">$data</span>[<span class="string">&#x27;openid&#x27;</span>] = <span class="variable">$openid</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx负载均衡配置</title>
      <link href="/blog/p/2019Nginx/"/>
      <url>/blog/p/2019Nginx/</url>
      
        <content type="html"><![CDATA[<p>Nginx 负载均衡配置</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">upstream</span> hcon.com &#123;</span><br><span class="line">  <span class="attribute">server</span> localhost:<span class="number">8081</span> weight=<span class="number">10</span>;</span><br><span class="line">  <span class="attribute">server</span> localhost:<span class="number">8082</span> weight=<span class="number">2</span>;</span><br><span class="line">  <span class="attribute">server</span> localhost:<span class="number">8083</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">server_name</span> localhost;</span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://hcon.com</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序 兼容用户拒绝获取位置权限 用户拒绝权限处理</title>
      <link href="/blog/p/2017WeChat/"/>
      <url>/blog/p/2017WeChat/</url>
      
        <content type="html"><![CDATA[<p>微信小程序 兼容用户拒绝获取位置权限 用户拒绝权限处理</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">function</span> <span class="title function_">getAuthor</span>(<span class="params"></span>) &#123;</span><br><span class="line">  wx.<span class="title function_">getSetting</span>(&#123;</span><br><span class="line">    <span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!res.<span class="property">authSetting</span>[<span class="string">&#x27;scope.userLocation&#x27;</span>]) &#123;</span><br><span class="line">        wx.<span class="title function_">openSetting</span>(&#123;</span><br><span class="line">          <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span>&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(res) <span class="keyword">if</span> (!res.<span class="property">authSetting</span>[<span class="string">&#x27;scope.userLocation&#x27;</span>]) &#123;</span><br><span class="line">              wx.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">                <span class="attr">title</span>: <span class="string">&#x27;温馨提醒&#x27;</span>,</span><br><span class="line">                <span class="attr">content</span>: <span class="string">&#x27;需要获取您的地理位置才能使用小程序&#x27;</span>,</span><br><span class="line">                <span class="attr">cancelText</span>: <span class="string">&#x27;不使用&#x27;</span>,</span><br><span class="line">                <span class="attr">confirmText</span>: <span class="string">&#x27;获取位置&#x27;</span>,</span><br><span class="line">                <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">res</span>) &#123;</span><br><span class="line">                  <span class="keyword">if</span> (res.<span class="property">confirm</span>) &#123;</span><br><span class="line">                    <span class="title function_">getAuthor</span>();</span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (res.<span class="property">cancel</span>) &#123;</span><br><span class="line">                    wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">                      <span class="attr">title</span>: <span class="string">&#x27;您可点击左下角 定位按钮 重新获取位置&#x27;</span>,</span><br><span class="line">                      <span class="attr">icon</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">                      <span class="attr">duration</span>: <span class="number">3000</span></span><br><span class="line">                    &#125;)</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>JS判断设备 检查手机系统 检测系统</title>
      <link href="/blog/p/2016DeterminingDevices/"/>
      <url>/blog/p/2016DeterminingDevices/</url>
      
        <content type="html"><![CDATA[<p>JS 判断设备 检查手机系统 检测系统</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (</span><br><span class="line">  <span class="regexp">/AppleWebKit.*Mobile/i</span>.<span class="title function_">test</span>(navigator.<span class="property">userAgent</span>) ||</span><br><span class="line">  <span class="regexp">/MIDP|SymbianOS|NOKIA|SAMSUNG|LG|NEC|TCL|Alcatel|BIRD|DBTEL|Dopod|PHILIPS|HAIER|LENOVO|MOT-|Nokia|SonyEricsson|SIE-|Amoi|ZTE/</span>.<span class="title function_">test</span>(</span><br><span class="line">    navigator.<span class="property">userAgent</span></span><br><span class="line">  )</span><br><span class="line">) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>.<span class="title function_">indexOf</span>(<span class="string">&quot;?mobile&quot;</span>) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="regexp">/Android|webOS|iPhone|iPod|BlackBerry/i</span>.<span class="title function_">test</span>(navigator.<span class="property">userAgent</span>)) &#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;../m/index.html&quot;</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="regexp">/iPad/i</span>.<span class="title function_">test</span>(navigator.<span class="property">userAgent</span>)) &#123;</span><br><span class="line">        <span class="comment">//ipad</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 其他</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getPgjs</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> agent = navigator.<span class="property">userAgent</span>.<span class="title function_">toLowerCase</span>();</span><br><span class="line">  <span class="keyword">var</span> res = agent.<span class="title function_">match</span>(<span class="regexp">/android/</span>);</span><br><span class="line">  <span class="keyword">if</span> (res == <span class="string">&quot;android&quot;</span>) <span class="keyword">return</span> res;</span><br><span class="line">  res = agent.<span class="title function_">match</span>(<span class="regexp">/iphone/</span>);</span><br><span class="line">  <span class="keyword">if</span> (res == <span class="string">&quot;iphone&quot;</span>) <span class="keyword">return</span> <span class="string">&quot;ios&quot;</span>;</span><br><span class="line">  res = agent.<span class="title function_">match</span>(<span class="regexp">/ipad/</span>);</span><br><span class="line">  <span class="keyword">if</span> (res == <span class="string">&quot;ipad&quot;</span>) <span class="keyword">return</span> <span class="string">&quot;ios&quot;</span>;</span><br><span class="line">  res = agent.<span class="title function_">match</span>(<span class="regexp">/windows/</span>);</span><br><span class="line">  <span class="keyword">if</span> (res == <span class="string">&quot;windows&quot;</span>) <span class="keyword">return</span> <span class="string">&quot;wp&quot;</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;pc&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>响应式viewport meta标签配置</title>
      <link href="/blog/p/2016responsive/"/>
      <url>/blog/p/2016responsive/</url>
      
        <content type="html"><![CDATA[<p>响应式viewport meta标签配置</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>width：控制 viewport 的大小，可以指定的一个值，如果 600，或者特殊的值，如 –</li><li>device-width 为设备的宽度（单位为缩放为 100% 时的 CSS 的像素）。</li><li>height：和 width 相对应，指定高度。</li><li>initial-scale：初始缩放比例，也即是当页面第一次 load 的时候缩放比例。</li><li>maximum-scale：允许用户缩放到的最大比例。</li><li>minimum-scale：允许用户缩放到的最小比例。</li><li>user-scalable：用户是否可以手动缩放。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>pageX  clientX  screenX 区别</title>
      <link href="/blog/p/2015Difference/"/>
      <url>/blog/p/2015Difference/</url>
      
        <content type="html"><![CDATA[<p>pageX  clientX  screenX 区别<br><img src="https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/img/2015/29002336_cTdr.png"></p><ul><li>screen X screenY 是以我们的电脑屏幕 为基准点测量</li><li>pageX pageY 以我们的 文档 （绝对定位） 的基准点 对齐 ie678 不认识</li><li>clientX clientY 以 可视区域 为基准点 类似于 固定定位</li></ul>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>copyright</title>
      <link href="/blog/p/2017copyright/"/>
      <url>/blog/p/2017copyright/</url>
      
        <content type="html"><![CDATA[<p><img src="https://ihogu-1251903635.cos.ap-shanghai.myqcloud.com/site/blog/site_img/common/copyright/copyright.png" alt="cc logo"></p><h2 id="Attribution-NonCommercial-ShareAlike-4-0-International-CC-BY-NC-SA-4-0"><a href="#Attribution-NonCommercial-ShareAlike-4-0-International-CC-BY-NC-SA-4-0" class="headerlink" title="Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)"></a>Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)</h2><p>This is a human-readable summary of (and not a substitute for) the <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode">license</a>. <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/#">Disclaimer</a>.</p><h3 id="You-are-free-to"><a href="#You-are-free-to" class="headerlink" title="You are free to:"></a>You are free to:</h3><ul><li><p>Share — copy and redistribute the material in any medium or format</p></li><li><p>Adapt — remix, transform, and build upon the material</p></li><li><p>The licensor cannot revoke these freedoms as long as you follow the license terms.</p></li></ul><hr><h3 id="Under-the-following-terms"><a href="#Under-the-following-terms" class="headerlink" title="Under the following terms:"></a>Under the following terms:</h3><ul><li><p>Attribution — You must give <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/#">appropriate credit</a>, provide a link to the license, and <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/#">indicate if changes were made</a>. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.</p></li><li><p>NonCommercial — You may not use the material for <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/#">commercial purposes</a>.</p></li><li><p>ShareAlike — If you remix, transform, or build upon the material, you must distribute your contributions under the <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/#">same license</a> as the original.</p></li><li><p>No additional restrictions — You may not apply legal terms or <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/#">technological measures</a> that legally restrict others from doing anything the license permits.</p></li></ul><hr><h3 id="Notices"><a href="#Notices" class="headerlink" title="Notices:"></a>Notices:</h3><ul><li><p>You do not have to comply with the license for elements of the material in the public domain or where your use is permitted by an applicable <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/#">exception or limitation</a>.</p></li><li><p>No warranties are given. The license may not give you all of the permissions necessary for your intended use. For example, other rights such as <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/#">publicity, privacy, or moral rights</a> may limit how you use the material.</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>404</title>
      <link href="/blog/404/index.html"/>
      <url>/blog/404/index.html</url>
      
        <content type="html"><![CDATA[<h1 id="Page-Not-Found"><a href="#Page-Not-Found" class="headerlink" title="Page Not Found"></a>Page Not Found</h1><p><a href="https://harrywork.com/">Return Home</a></p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>👋关于</title>
      <link href="/blog/about/index.html"/>
      <url>/blog/about/index.html</url>
      
        <content type="html"><![CDATA[<h3 id="大家好-👉我是小秦-一个生活在青岛的独立开发者👩‍💻"><a href="#大家好-👉我是小秦-一个生活在青岛的独立开发者👩‍💻" class="headerlink" title="大家好,👉我是小秦,一个生活在青岛的独立开发者👩‍💻"></a>大家好,👉我是小秦,一个生活在青岛的独立开发者👩‍💻</h3><h3 id="🏃跑步和🚴‍♀️骑自行车是我最喜欢的运动方式"><a href="#🏃跑步和🚴‍♀️骑自行车是我最喜欢的运动方式" class="headerlink" title="🏃跑步和🚴‍♀️骑自行车是我最喜欢的运动方式"></a>🏃跑步和🚴‍♀️骑自行车是我最喜欢的运动方式</h3><h3 id="📜座右铭-勿以恶小而为之-勿以善小而不为"><a href="#📜座右铭-勿以恶小而为之-勿以善小而不为" class="headerlink" title="📜座右铭:勿以恶小而为之, 勿以善小而不为"></a>📜座右铭:勿以恶小而为之, 勿以善小而不为</h3><h2 id="🎵"><a href="#🎵" class="headerlink" title="🎵"></a>🎵</h2><ul><li><a href="https://music.163.com/#/user/home?id=102789614"> https://music.163.com/#/user/home?id=102789614</a></li></ul><h2 id="🎮"><a href="#🎮" class="headerlink" title="🎮"></a>🎮</h2><ul><li><a href="https://www.roblox.com/share?code=66cbee26fc734b49bad5458a128696df&type=Profile&source=ProfileShare&stamp=1748311780745">roblox</a></li><li><a href="https://steamcommunity.com/id/harry1012/">steam</a></li></ul><p>感谢您的关注</p><hr><h1 id="🎧"><a href="#🎧" class="headerlink" title="🎧"></a>🎧</h1><iframe src="../my/music/index.html" width="100%" height="170" frameborder="0" scrolling="no"></iframe><h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><ul><li>由于作者水平有限,错落缺点在所难免,如果您发现任何问题欢迎批评指正</li><li>本站所有文章及源码均免费开放,如果能帮到您,我会很开心</li><li>欢迎转载,请在文章页面明显位置给出原文连接</li><li>感谢您花时间浏览我的站点</li></ul>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/blog/tags/index.html"/>
      <url>/blog/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/blog/categories/index.html"/>
      <url>/blog/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>📬联系</title>
      <link href="/blog/contact/index.html"/>
      <url>/blog/contact/index.html</url>
      
        <content type="html"><![CDATA[<ul><li><h3 id="Email-x68-97-x6f-x6c-101-105-x71-x40-103-x6d-x61-105-x6c-x2e-99-x6f-109"><a href="#Email-x68-97-x6f-x6c-101-105-x71-x40-103-x6d-x61-105-x6c-x2e-99-x6f-109" class="headerlink" title="Email: &#x68;&#97;&#x6f;&#x6c;&#101;&#105;&#x71;&#x40;&#103;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#99;&#x6f;&#109;"></a>Email: <a href="mailto:&#x68;&#97;&#x6f;&#x6c;&#101;&#105;&#x71;&#x40;&#103;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#99;&#x6f;&#109;">&#x68;&#97;&#x6f;&#x6c;&#101;&#105;&#x71;&#x40;&#103;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#99;&#x6f;&#109;</a></h3></li><li><h3 id="QQ-550913732"><a href="#QQ-550913732" class="headerlink" title="QQ:550913732"></a>QQ:550913732</h3></li><li><h3 id="网址-harrywork-com-blog"><a href="#网址-harrywork-com-blog" class="headerlink" title="网址: harrywork.com&#x2F;blog"></a>网址: harrywork.com&#x2F;blog</h3></li><li><h3 id="地址-📍青岛-市南区"><a href="#地址-📍青岛-市南区" class="headerlink" title="地址:📍青岛 市南区"></a>地址:📍青岛 市南区</h3></li></ul><!-- <font size="3">👉加QQ前,还请先将[需求文档](document.html)发至以上邮箱!否则可能无法及时回复,感谢支持🙇</font>- [需求文档是什么?](document.html)- [项目合作须知](document.html) --><h3 id="🎧听歌"><a href="#🎧听歌" class="headerlink" title="🎧听歌"></a>🎧听歌</h3><iframe src="../my/music/index.html" width="100%" height="170" frameborder="0" scrolling="no"></iframe> ]]></content>
      
    </entry>
    
    
  
</search>
